{"version":3,"sources":["../static/js/2.60708580.chunk.js","docs/zh-cn/transition.md"],"names":["webpackJsonp","176","module","exports"],"mappings":"AAAAA,cAAc,IAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,QAAA","file":"static/js/2.60708580.chunk.js","sourcesContent":["webpackJsonp([2],{\n\n/***/ 176:\n/***/ (function(module, exports) {\n\nmodule.exports = \"## Transition\\n\\nTransition & Transition Group. 很容易运动一个或者一堆 dom 元素，提供优雅的进入或者离开过渡动画。\\n\\n## Usage\\n\\n* `<m-transition></m-transition>`\\n* `<m-transition-group></m-transition-group>`\\n\\n## 案例\\n\\n```jsx\\nimport { define, WeElement, render, h } from 'omi'\\nimport 'omim/transition'\\nimport 'omim/transition-group'\\n\\ndefine('my-app', class extends WeElement {\\n\\n  static css = `\\n  .item-leave-to, .item-enter, .item-appear {\\n    opacity: 0;\\n    transform: translateX(15px);\\n  }\\n\\n  .item-leave-active, .item-enter-active,.item-appear-active {\\n    transition: all 500ms ease-in;\\n  }`\\n\\n  _id = 0\\n\\n  items = [\\n    { _id: this._id++, text: 'Learn omi' },\\n    { _id: this._id++, text: 'Learn omim' },\\n    { _id: this._id++, text: 'Learn transition' },\\n    { _id: this._id++, text: 'Learn transition group' },\\n  ]\\n\\n  toggle = () => {\\n    this.removed = false\\n    this.show = !this.show\\n    this.update()\\n  }\\n\\n  onRemoved = () => {\\n    this.removed = true\\n  }\\n\\n  show = true\\n\\n  removed = false\\n\\n  render() {\\n    const items = this.items\\n    return (\\n      <div style={{ marginTop: '2rem' }}>\\n\\n        <h1>Transition</h1>\\n        <m-transition onRemoved={this.onRemoved} name=\\\"item\\\" appear removable removed={this.removed} show={this.show}>\\n          <p>Hello transition</p>\\n        </m-transition>\\n        <br />\\n        <button onclick={this.toggle}>\\bToggle</button>\\n\\n        <h1>Transition Group</h1>\\n        <ul>\\n          <m-transition-group name=\\\"item\\\" appear delay={200}>\\n            {items.map(({ _id, text }) =>\\n              <li key={_id}>\\n                <button\\n                  onClick={() => {\\n                    this.items = items.filter(item => item._id !== _id)\\n                    this.update()\\n                  }}>\\n                  &times;\\n                </button> {text}\\n              </li>\\n            )}\\n          </m-transition-group>\\n        </ul>\\n        <button\\n          onClick={() => {\\n            const text = prompt('Enter some text');\\n            if (text) {\\n              this.items.push({ _id: this._id++, text })\\n              this.update()\\n            }\\n          }}\\n        >\\n          Add Item\\n      </button>\\n      </div>\\n    )\\n\\n  }\\n})\\nrender(<my-app />, 'body')\\n```\\n\"\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/2.60708580.chunk.js","module.exports = \"## Transition\\n\\nTransition & Transition Group. 很容易运动一个或者一堆 dom 元素，提供优雅的进入或者离开过渡动画。\\n\\n## Usage\\n\\n* `<m-transition></m-transition>`\\n* `<m-transition-group></m-transition-group>`\\n\\n## 案例\\n\\n```jsx\\nimport { define, WeElement, render, h } from 'omi'\\nimport 'omim/transition'\\nimport 'omim/transition-group'\\n\\ndefine('my-app', class extends WeElement {\\n\\n  static css = `\\n  .item-leave-to, .item-enter, .item-appear {\\n    opacity: 0;\\n    transform: translateX(15px);\\n  }\\n\\n  .item-leave-active, .item-enter-active,.item-appear-active {\\n    transition: all 500ms ease-in;\\n  }`\\n\\n  _id = 0\\n\\n  items = [\\n    { _id: this._id++, text: 'Learn omi' },\\n    { _id: this._id++, text: 'Learn omim' },\\n    { _id: this._id++, text: 'Learn transition' },\\n    { _id: this._id++, text: 'Learn transition group' },\\n  ]\\n\\n  toggle = () => {\\n    this.removed = false\\n    this.show = !this.show\\n    this.update()\\n  }\\n\\n  onRemoved = () => {\\n    this.removed = true\\n  }\\n\\n  show = true\\n\\n  removed = false\\n\\n  render() {\\n    const items = this.items\\n    return (\\n      <div style={{ marginTop: '2rem' }}>\\n\\n        <h1>Transition</h1>\\n        <m-transition onRemoved={this.onRemoved} name=\\\"item\\\" appear removable removed={this.removed} show={this.show}>\\n          <p>Hello transition</p>\\n        </m-transition>\\n        <br />\\n        <button onclick={this.toggle}>\\bToggle</button>\\n\\n        <h1>Transition Group</h1>\\n        <ul>\\n          <m-transition-group name=\\\"item\\\" appear delay={200}>\\n            {items.map(({ _id, text }) =>\\n              <li key={_id}>\\n                <button\\n                  onClick={() => {\\n                    this.items = items.filter(item => item._id !== _id)\\n                    this.update()\\n                  }}>\\n                  &times;\\n                </button> {text}\\n              </li>\\n            )}\\n          </m-transition-group>\\n        </ul>\\n        <button\\n          onClick={() => {\\n            const text = prompt('Enter some text');\\n            if (text) {\\n              this.items.push({ _id: this._id++, text })\\n              this.update()\\n            }\\n          }}\\n        >\\n          Add Item\\n      </button>\\n      </div>\\n    )\\n\\n  }\\n})\\nrender(<my-app />, 'body')\\n```\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/docs/zh-cn/transition.md\n// module id = 176\n// module chunks = 2"],"sourceRoot":""}