{"version":3,"sources":["MyComponent.js","HookTest.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["MyComponent","onClick","evt","__webpack_require__","e","then","t","bind","_this","showLoading","forceUpdate","onChange","console","log","detail","isOn","checked","Object","es","this","size","color","onEventChange","icons","viewBox","width","height","aria-hidden","d","fill","total","css","current-page","page-size","id","React","Component","SomeComponent","props","_useState","useState","_useState2","slicedToArray","result","setSwitch","App","_react_16_8_6_react_default","a","createElement","className","src","logo","alt","href","target","rel","src_MyComponent","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","p"],"mappings":"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","file":"static/js/main.675e5578.chunk.js","sourcesContent":["/** @jsx nativeEvents */\nimport nativeEvents from 'jsx-native-events'\n\nimport React from 'react';\nimport '@omim/core/icon-button'\nimport '@omim/core/button'\nimport '@omim/core/checkbox'\nimport '@omim/core/radio'\nimport '@omim/core/pagination'\n\nclass MyComponent extends React.Component {\n  onClick = (evt) => {\n\n    import('@omim/core/loading').then(() => {\n      this.showLoading = true\n      this.forceUpdate()\n    })\n  }\n\n  onChange = (evt) => {\n    console.log(evt.detail.isOn)\n    this.checked = !this.checked\n    this.forceUpdate()\n  }\n\n  checked = true\n  render() {\n    return (\n      <div>\n\n        <m-button onClick={this.onClick}>Click me to dynamic Import @omim/core/loading</m-button>\n        <div>\n          <m-loading size=\"25\"></m-loading>\n          <m-loading size=\"35\"></m-loading>\n          <m-loading size=\"45\"></m-loading>\n          <m-loading size=\"55\"></m-loading>\n\n          <br />\n          <m-loading size=\"25\" color=\"#2d7418\"></m-loading>\n          <m-loading size=\"35\" color=\"#f37736\"></m-loading>\n          <m-loading size=\"45\" color=\"#7bc043\"></m-loading>\n          <m-loading size=\"55\" color=\"#2170b8\"></m-loading>\n        </div>\n        <m-radio checked='0'></m-radio>\n        <m-radio checked></m-radio>\n        <m-checkbox checked={this.checked}></m-checkbox>\n        <m-checkbox></m-checkbox>\n        <br/>\n        <m-icon-button onEventChange={ this.onChange } color=\"red\" icons=\"['favorite', 'favorite_border']\"></m-icon-button>\n\n        <m-icon-button>\n          <svg viewBox=\"0 0 24 24\" width=\"2em\" height=\"2em\" aria-hidden=\"true\">\n            <path d=\"M7.52 21.48C4.25 19.94 1.91 16.76 1.55 13H.05C.56 19.16 5.71 24 12 24l.66-.03-3.81-3.81-1.33 1.32zm.89-6.52c-.19 0-.37-.03-.52-.08-.16-.06-.29-.13-.4-.24-.11-.1-.2-.22-.26-.37-.06-.14-.09-.3-.09-.47h-1.3c0 .36.07.68.21.95.14.27.33.5.56.69.24.18.51.32.82.41.3.1.62.15.96.15.37 0 .72-.05 1.03-.15.32-.1.6-.25.83-.44s.42-.43.55-.72c.13-.29.2-.61.2-.97 0-.19-.02-.38-.07-.56-.05-.18-.12-.35-.23-.51-.1-.16-.24-.3-.4-.43-.17-.13-.37-.23-.61-.31.2-.09.37-.2.52-.33.15-.13.27-.27.37-.42.1-.15.17-.3.22-.46.05-.16.07-.32.07-.48 0-.36-.06-.68-.18-.96-.12-.28-.29-.51-.51-.69-.2-.19-.47-.33-.77-.43C9.1 8.05 8.76 8 8.39 8c-.36 0-.69.05-1 .16-.3.11-.57.26-.79.45-.21.19-.38.41-.51.67-.12.26-.18.54-.18.85h1.3c0-.17.03-.32.09-.45s.14-.25.25-.34c.11-.09.23-.17.38-.22.15-.05.3-.08.48-.08.4 0 .7.1.89.31.19.2.29.49.29.86 0 .18-.03.34-.08.49-.05.15-.14.27-.25.37-.11.1-.25.18-.41.24-.16.06-.36.09-.58.09H7.5v1.03h.77c.22 0 .42.02.6.07s.33.13.45.23c.12.11.22.24.29.4.07.16.1.35.1.57 0 .41-.12.72-.35.93-.23.23-.55.33-.95.33zm8.55-5.92c-.32-.33-.7-.59-1.14-.77-.43-.18-.92-.27-1.46-.27H12v8h2.3c.55 0 1.06-.09 1.51-.27.45-.18.84-.43 1.16-.76.32-.33.57-.73.74-1.19.17-.47.26-.99.26-1.57v-.4c0-.58-.09-1.1-.26-1.57-.18-.47-.43-.87-.75-1.2zm-.39 3.16c0 .42-.05.79-.14 1.13-.1.33-.24.62-.43.85-.19.23-.43.41-.71.53-.29.12-.62.18-.99.18h-.91V9.12h.97c.72 0 1.27.23 1.64.69.38.46.57 1.12.57 1.99v.4zM12 0l-.66.03 3.81 3.81 1.33-1.33c3.27 1.55 5.61 4.72 5.96 8.48h1.5C23.44 4.84 18.29 0 12 0z\"></path>\n          </svg>\n          <svg viewBox=\"0 0 1024 1024\" width=\"2em\" height=\"2em\" aria-hidden=\"true\">\n            <path d=\"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z\"\n              fill=\"#F98080\"></path>\n            <path d=\"M464 688a48 48 0 1 0 96 0 48 48 0 1 0-96 0zm24-112h48c4.4 0 8-3.6 8-8V296c0-4.4-3.6-8-8-8h-48c-4.4 0-8 3.6-8 8v272c0 4.4 3.6 8 8 8z\"\n              fill=\"#F95050\"></path>\n          </svg>\n        </m-icon-button>\n        <br />\n        <m-pagination total=\"26\" css={`\n         button,li{\n           background: white;\n        }\n        `} current-page=\"1\" page-size=\"5\" id=\"myPagination\">\n        </m-pagination>\n\n      </div>\n    );\n  }\n}\n\nexport default MyComponent","/** @jsx nativeEvents */\nimport nativeEvents from 'jsx-native-events'\nimport { useState } from 'react'\nimport '@omim/core/icon-button'\n\nexport default function SomeComponent(props) {\n    const [result, setSwitch] = useState(false)\n\n    return <div>\n        <p>The switch is {result ? 'on' : 'off'}.</p>\n\n        <m-icon-button color=\"red\" icons=\"['favorite', 'favorite_border']\" onEventChange={e => setSwitch(e.detail.isOn)}></m-icon-button>\n    </div>\n}","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport '@omim/core/button'\nimport MyComponent from './MyComponent'\nimport HookTest from './HookTest'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n        <a\n          className=\"App-link\"\n          href=\"https://github.com/Tencent/omi\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn Omi and Omim\n        </a>\n        <HookTest></HookTest>\n        <m-button>Omim Button</m-button>\n        <MyComponent></MyComponent>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}