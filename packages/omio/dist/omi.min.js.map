{"version":3,"sources":["../src/vnode.js","../src/h.js","../src/util.js","../src/clone-element.js","../src/constants.js","../src/render-queue.js","../src/vdom/index.js","../src/dom/index.js","../src/style.js","../src/vdom/diff.js","../src/vdom/component-recycler.js","../src/vdom/component.js","../src/obaa.js","../src/render.js","../src/define.js","../src/class.js","../src/render-to-string.js","../src/options.js","../src/component.js","../src/omi.js"],"names":["VNode","h","nodeName","attributes","lastSimple","child","simple","i","children","arguments","length","stack","push","pop","String","p","key","options","vnode","toObject","val","TypeError","Object","assign","target","from","symbols","to","s","hasOwnProperty","call","getOwnPropertySymbols","propIsEnumerable","extend","obj","props","applyRef","ref","value","current","isArray","prototype","toString","getUse","data","paths","out","name","forEach","path","index","getTargetByPath","keys","tempPath","tempVal","args","apply","origin","arr","replace","split","len","getPath","result","item","removeItem","splice","Fragment","cloneElement","slice","ATTR_KEY","component","debounceRendering","defer","rerender","items","enqueueRender","renderComponent","mapping","hydrating","isSameNodeType","node","splitText","_componentConstructor","normalizedNodeName","toLowerCase","defaultProps","doc","createElementNS","createElement","_ref","createNode","match","a","b","cssTxt","isSvg","rule","map","o","x","trim","Array","Symbol","iterator","_ref3","properties","next","done","_ref2","property","style","parseCSSText","cssText","parentNode","removeChild","setAccessor","old","className","IS_NON_DIMENSIONAL$1","test","oldJson","currentJson","changed","ckey","nameLower","addEventListener","eventProxy","useCapture","__html","touchEnd","touchStart","_listeners","removeEventListener","ns","removeAttributeNS","removeAttribute","setAttributeNS","setAttribute","setProperty","e","this","type","event","___touchY","touches","pageY","Math","abs","changedTouches","pageX","___touchX","document","body","scrollTop","___scrollTop","dispatchEvent","CustomEvent","styleCache","ctor","attrName","getCtorName","styleId","prefix","css","g0","g1","g2","g3","addStyle","id","ele","appendClass","head","getElementsByTagName","appendChild","someThingStyles","getElementById","textContent","window","ActiveXObject","styleSheet","addStyleWithoutId","attr","scopeVdom","addStyleToHead","scopedStyle","addScopedAttrStatic","vdom","staticStyleMapping","scoper","diffLevel","c","mounts","isSvgMode","afterMount","constructor","diff","dom","store","mountAll","parent","componentRoot","updateSelf","ret","prevSvgMode","vnodeName","buildComponentFromVNode","createTextNode","replaceChild","recollectNodeTree","__omiattr_","vchildren","innerDiffNode","fc","nodeValue","isHydrating","j","originalChildren","keyed","keyedLen","childrenLen","vlen","_child","f","_component","__key","vchild","min","undefined","nextSibling","idiff","removeNode","insertBefore","unmountOnly","removeChildren","previousSibling","attrs","collectComponent","inst","components","Ctor","render","Component","createComponent","list","use","using","scopedCssAttr","storeName","_updatePath","useSelf","_storeName","_use","_updatePath2","updateSelfInstances","usingSelf","_updateSelfPath","computed","compute","isMultiStore","nextBase","setComponentProps","opts","_disable","install","__ref","base","prevProps","isChild","rendered","initialChildComponent","initialBase","isUpdate","skip","receiveProps","previousProps","beforeUpdate","beforeRender","scopeHost","childComponent","childProps","getNodeProps","toUnmount","cbase","baseParent","SYNC_RENDER","componentRef","t","unshift","_parentComponent","updated","afterUpdate","_renderCallbacks","flushMounts","oldDom","originalComponent","isDirectOwner","isOwner","unmountComponent","ASYNC_RENDER","beforeUnmount","instances","inner","instance","Constructor","$_o_","$_r_","$_p_","track","prop","callback","isInArray","eventPropArr","isString","watch","propChanged","triggerStr","methods","cprop","isFunction","onPropertyChanged","root","toUpperCase","substring","currentValue","get","set","mock","enumerable","oldValue","nan","$_c_","getRootName","handler","all","rootName","indexOf","empty","merge","querySelector","firstChild","obsStore","extendStoreUpate","obaa","patchs","fixPath","update","patch","needUpdate","onChange","ck","keyB","updatePath","includePath","keyA","pathA","substr","pathB","mpPath","isNaN","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","writable","configurable","setPrototypeOf","__proto__","_Component","Comp","config","_temp","_this","concat","_ret","storeHelpers","func","rpx","str","innerWidth","tag","hasOwn","argType","classes","arg","_Array$prototype$slic","class","extractClass","classNames","VOID_ELEMENTS","isLargeString","styleObjToCss","IS_NON_DIMENSIONAL","renderToString","html","_renderToString","pretty","indentChar","isComponent","scopedCSS","cssStr","scopedCSSAttr","cssAttr","sortAttributes","sort","allAttributes","v","attributeHook","hooked","xml","encodeEntities","sub","isVoid","pieces","indent","hasLarge","join","assign$1","createRef","isWeb","global","propertyIsEnumerable","Element","runListeners","oEvent","iLstId","iElId","oEvtListeners","oListeners","aEls","aEvts","sEventType","fListener","nElIdx","aElListeners","proto","F","Error","usePromise","Promise","__config__","platform","systemVersion","resolve","then","bind","setTimeout","_preCss","elementId","componentChange","_willUpdate","fire","_willUpdateSelf","every","FORCE_RENDER","is","add","size","ignoreLines","WeElement","defineElement","define","Omi","getHost","module","exports"],"mappings":"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","file":"omi.min.js","sourcesContent":["/** Virtual DOM Node */\nexport function VNode() {}\n","import { VNode } from './vnode'\nimport options from './options'\n\nconst stack = []\n\n/**\n * JSX/hyperscript reviver.\n * @see http://jasonformat.com/wtf-is-jsx\n * Benchmarks: https://esbench.com/bench/57ee8f8e330ab09900a1a1a0\n *\n * Note: this is exported as both `h()` and `createElement()` for compatibility reasons.\n *\n * Creates a VNode (virtual DOM element). A tree of VNodes can be used as a lightweight representation\n * of the structure of a DOM tree. This structure can be realized by recursively comparing it against\n * the current _actual_ DOM structure, and applying only the differences.\n *\n * `h()`/`createElement()` accepts an element name, a list of attributes/props,\n * and optionally children to append to the element.\n *\n * @example The following DOM tree\n *\n * `<div id=\"foo\" name=\"bar\">Hello!</div>`\n *\n * can be constructed using this function as:\n *\n * `h('div', { id: 'foo', name : 'bar' }, 'Hello!');`\n *\n * @param {string} nodeName\tAn element name. Ex: `div`, `a`, `span`, etc.\n * @param {Object} attributes\tAny attributes/props to set on the created element.\n * @param rest\t\t\tAdditional arguments are taken to be children to append. Can be infinitely nested Arrays.\n *\n * @public\n */\nexport function h(nodeName, attributes) {\n  let children = [],\n    lastSimple,\n    child,\n    simple,\n    i\n  for (i = arguments.length; i-- > 2; ) {\n    stack.push(arguments[i])\n  }\n  if (attributes && attributes.children != null) {\n    if (!stack.length) stack.push(attributes.children)\n    delete attributes.children\n  }\n  while (stack.length) {\n    if ((child = stack.pop()) && child.pop !== undefined) {\n      for (i = child.length; i--; ) stack.push(child[i])\n    } else {\n      if (typeof child === 'boolean') child = null\n\n      if ((simple = typeof nodeName !== 'function')) {\n        if (child == null) child = ''\n        else if (typeof child === 'number') child = String(child)\n        else if (typeof child !== 'string') simple = false\n      }\n\n      if (simple && lastSimple) {\n        children[children.length - 1] += child\n      } else if (children.length === 0) {\n        children = [child]\n      } else {\n        children.push(child)\n      }\n\n      lastSimple = simple\n    }\n  }\n\n  let p = new VNode()\n  p.nodeName = nodeName\n  p.children = children\n\tp.attributes = attributes == null ? undefined : attributes\n  p.key = attributes == null ? undefined : attributes.key\n\n  // if a \"vnode hook\" is defined, pass every created VNode to it\n  if (options.vnode !== undefined) options.vnode(p)\n\n  return p\n}\n","'use strict'\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols\nvar hasOwnProperty = Object.prototype.hasOwnProperty\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable\n\nfunction toObject(val) {\n  if (val === null || val === undefined) {\n    throw new TypeError('Object.assign cannot be called with null or undefined')\n  }\n\n  return Object(val)\n}\n\nexport function assign(target, source) {\n  var from\n  var to = toObject(target)\n  var symbols\n\n  for (var s = 1; s < arguments.length; s++) {\n    from = Object(arguments[s])\n\n    for (var key in from) {\n      if (hasOwnProperty.call(from, key)) {\n        to[key] = from[key]\n      }\n    }\n\n    if (getOwnPropertySymbols) {\n      symbols = getOwnPropertySymbols(from)\n      for (var i = 0; i < symbols.length; i++) {\n        if (propIsEnumerable.call(from, symbols[i])) {\n          to[symbols[i]] = from[symbols[i]]\n        }\n      }\n    }\n  }\n\n  return to\n}\n\nif (typeof Element !== 'undefined' && !Element.prototype.addEventListener) {\n  var oListeners = {};\n  function runListeners(oEvent) {\n    if (!oEvent) { oEvent = window.event; }\n    for (var iLstId = 0, iElId = 0, oEvtListeners = oListeners[oEvent.type]; iElId < oEvtListeners.aEls.length; iElId++) {\n      if (oEvtListeners.aEls[iElId] === this) {\n        for (iLstId; iLstId < oEvtListeners.aEvts[iElId].length; iLstId++) { oEvtListeners.aEvts[iElId][iLstId].call(this, oEvent); }\n        break;\n      }\n    }\n  }\n  Element.prototype.addEventListener = function (sEventType, fListener /*, useCapture (will be ignored!) */) {\n    if (oListeners.hasOwnProperty(sEventType)) {\n      var oEvtListeners = oListeners[sEventType];\n      for (var nElIdx = -1, iElId = 0; iElId < oEvtListeners.aEls.length; iElId++) {\n        if (oEvtListeners.aEls[iElId] === this) { nElIdx = iElId; break; }\n      }\n      if (nElIdx === -1) {\n        oEvtListeners.aEls.push(this);\n        oEvtListeners.aEvts.push([fListener]);\n        this[\"on\" + sEventType] = runListeners;\n      } else {\n        var aElListeners = oEvtListeners.aEvts[nElIdx];\n        if (this[\"on\" + sEventType] !== runListeners) {\n          aElListeners.splice(0);\n          this[\"on\" + sEventType] = runListeners;\n        }\n        for (var iLstId = 0; iLstId < aElListeners.length; iLstId++) {\n          if (aElListeners[iLstId] === fListener) { return; }\n        }\n        aElListeners.push(fListener);\n      }\n    } else {\n      oListeners[sEventType] = { aEls: [this], aEvts: [[fListener]] };\n      this[\"on\" + sEventType] = runListeners;\n    }\n  };\n  Element.prototype.removeEventListener = function (sEventType, fListener /*, useCapture (will be ignored!) */) {\n    if (!oListeners.hasOwnProperty(sEventType)) { return; }\n    var oEvtListeners = oListeners[sEventType];\n    for (var nElIdx = -1, iElId = 0; iElId < oEvtListeners.aEls.length; iElId++) {\n      if (oEvtListeners.aEls[iElId] === this) { nElIdx = iElId; break; }\n    }\n    if (nElIdx === -1) { return; }\n    for (var iLstId = 0, aElListeners = oEvtListeners.aEvts[nElIdx]; iLstId < aElListeners.length; iLstId++) {\n      if (aElListeners[iLstId] === fListener) { aElListeners.splice(iLstId, 1); }\n    }\n  };\n}\n\n\nif (typeof Object.create !== 'function') {\n  Object.create = function(proto, propertiesObject) {\n    if (typeof proto !== 'object' && typeof proto !== 'function') {\n      throw new TypeError('Object prototype may only be an Object: ' + proto)\n    } else if (proto === null) {\n      throw new Error(\n        \"This browser's implementation of Object.create is a shim and doesn't support 'null' as the first argument.\"\n      )\n    }\n\n    // if (typeof propertiesObject != 'undefined') {\n    //     throw new Error(\"This browser's implementation of Object.create is a shim and doesn't support a second argument.\");\n    // }\n\n    function F() {}\n    F.prototype = proto\n\n    return new F()\n  }\n}\n\nif (!String.prototype.trim) {\n  String.prototype.trim = function () {\n    return this.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '')\n  }\n}\n\n/**\n *  Copy all properties from `props` onto `obj`.\n *  @param {Object} obj\t\tObject onto which properties should be copied.\n *  @param {Object} props\tObject from which to copy properties.\n *  @returns obj\n *  @private\n */\nexport function extend(obj, props) {\n  for (let i in props) obj[i] = props[i]\n  return obj\n}\n\n/** Invoke or update a ref, depending on whether it is a function or object ref.\n *  @param {object|function} [ref=null]\n *  @param {any} [value]\n */\nexport function applyRef(ref, value) {\n  if (ref) {\n    if (typeof ref == 'function') ref(value)\n    else ref.current = value\n  }\n}\n\n/**\n * Call a function asynchronously, as soon as possible. Makes\n * use of HTML Promise to schedule the callback if available,\n * otherwise falling back to `setTimeout` (mainly for IE<11).\n *\n * @param {Function} callback\n */\n\nlet usePromise = typeof Promise == 'function'\n\n// for native\nif (\n  typeof document !== 'object' &&\n  typeof global !== 'undefined' &&\n  global.__config__\n) {\n  if (global.__config__.platform === 'android') {\n    usePromise = true\n  } else {\n    let systemVersion =\n      (global.__config__.systemVersion &&\n        global.__config__.systemVersion.split('.')[0]) ||\n      0\n    if (systemVersion > 8) {\n      usePromise = true\n    }\n  }\n}\n\nexport const defer = usePromise\n  ? Promise.resolve().then.bind(Promise.resolve())\n  : setTimeout\n\nexport function isArray(obj) {\n  return Object.prototype.toString.call(obj) === '[object Array]'\n}\n\nexport function nProps(props) {\n  if (!props || isArray(props)) return {}\n  const result = {}\n  Object.keys(props).forEach(key => {\n    result[key] = props[key].value\n  })\n  return result\n}\n\nexport function getUse(data, paths, out, name) {\n  const obj = []\n  paths.forEach((path, index) => {\n    const isPath = typeof path === 'string'\n    if (isPath) {\n      obj[index] = getTargetByPath(data, path)\n    } else {\n      const key = Object.keys(path)[0]\n      const value = path[key]\n      if (typeof value === 'string') {\n        obj[index] = getTargetByPath(data, value)\n      } else {\n        const tempPath = value[0]\n        if (typeof tempPath === 'string') {\n          const tempVal = getTargetByPath(data, tempPath)\n          obj[index] = value[1] ? value[1](tempVal) : tempVal\n        } else {\n          const args = []\n          tempPath.forEach(path =>{\n            args.push(getTargetByPath(data, path))\n          })\n          obj[index] = value[1].apply(null, args)\n        }\n      }\n      obj[key] = obj[index]\n    }\n  })\n  out && (out[name] = obj)\n  return obj\n}\n\nexport function getTargetByPath(origin, path) {\n  const arr = path.replace(/]/g, '').replace(/\\[/g, '.').split('.')\n  let current = origin\n  for (let i = 0, len = arr.length; i < len; i++) {\n    current = current[arr[i]]\n  }\n  return current\n}\n\n\nexport function getPath(obj, out, name) {\n\n  const result = {}\n  obj.forEach(item => {\n    if (typeof item === 'string') {\n      result[item] = true\n    } else {\n      const tempPath = item[Object.keys(item)[0]]\n      if (typeof tempPath === 'string') {\n        result[tempPath] = true\n      } else {\n        if(typeof tempPath[0] === 'string'){\n          result[tempPath[0]] = true\n        }else{\n          tempPath[0].forEach(path => result[path] = true)\n        }\n      }\n    }\n  })\n  out && (out[name] = result)\n  return result\n  \n}\n\nexport function removeItem(item, arr){\n  for (let i = 0, len = arr.length; i < len; i++) {\n    if (arr[i] === item) {\n      arr.splice(i, 1)\n      break\n    }\n  }\n}\n\nexport function Fragment(props) {\n  return props.children\n}\n","import { extend } from './util'\nimport { h } from './h'\n\n/**\n * Clones the given VNode, optionally adding attributes/props and replacing its children.\n * @param {VNode} vnode\t\tThe virtual DOM element to clone\n * @param {Object} props\tAttributes/props to add when cloning\n * @param {VNode} rest\t\tAny additional arguments will be used as replacement children.\n */\nexport function cloneElement(vnode, props) {\n  return h(\n    vnode.nodeName,\n    extend(extend({}, vnode.attributes), props),\n    arguments.length > 2 ? [].slice.call(arguments, 2) : vnode.children\n  )\n}\n","// render modes\n\nexport const NO_RENDER = 0\nexport const SYNC_RENDER = 1\nexport const FORCE_RENDER = 2\nexport const ASYNC_RENDER = 3\n\nexport const ATTR_KEY = '__omiattr_'\n\n// DOM properties that should NOT have \"px\" added when numeric\nexport const IS_NON_DIMENSIONAL = /acit|ex(?:s|g|n|p|$)|rph|ows|mnc|ntw|ine[ch]|zoo|^ord/i\n","import options from './options'\nimport { defer } from './util'\nimport { renderComponent } from './vdom/component'\n\n/** Managed queue of dirty components to be re-rendered */\n\nlet items = []\n\nexport function enqueueRender(component) {\n  if (items.push(component) == 1) {\n    ;(options.debounceRendering || defer)(rerender)\n  }\n}\n\n/** Rerender all enqueued dirty components */\nexport function rerender() {\n\tlet p\n\twhile ( (p = items.pop()) ) {\n    renderComponent(p)\n\t}\n}","import { extend } from '../util'\nimport options from '../options'\n\nconst mapping = options.mapping\n/**\n * Check if two nodes are equivalent.\n *\n * @param {Node} node\t\t\tDOM Node to compare\n * @param {VNode} vnode\t\t\tVirtual DOM node to compare\n * @param {boolean} [hydrating=false]\tIf true, ignores component constructors when comparing.\n * @private\n */\nexport function isSameNodeType(node, vnode, hydrating) {\n  if (typeof vnode === 'string' || typeof vnode === 'number') {\n    return node.splitText !== undefined\n  }\n  if (typeof vnode.nodeName === 'string') {\n    var ctor = mapping[vnode.nodeName]\n    if (ctor) {\n      return hydrating || node._componentConstructor === ctor\n    }\n    return !node._componentConstructor && isNamedNode(node, vnode.nodeName)\n  }\n  return hydrating || node._componentConstructor === vnode.nodeName\n}\n\n/**\n * Check if an Element has a given nodeName, case-insensitively.\n *\n * @param {Element} node\tA DOM Element to inspect the name of.\n * @param {String} nodeName\tUnnormalized name to compare against.\n */\nexport function isNamedNode(node, nodeName) {\n  return (\n    node.normalizedNodeName === nodeName ||\n    node.nodeName.toLowerCase() === nodeName.toLowerCase()\n  )\n}\n\n/**\n * Reconstruct Component-style `props` from a VNode.\n * Ensures default/fallback values from `defaultProps`:\n * Own-properties of `defaultProps` not present in `vnode.attributes` are added.\n *\n * @param {VNode} vnode\n * @returns {Object} props\n */\nexport function getNodeProps(vnode) {\n  let props = extend({}, vnode.attributes)\n  props.children = vnode.children\n\n  let defaultProps = vnode.nodeName.defaultProps\n  if (defaultProps !== undefined) {\n    for (let i in defaultProps) {\n      if (props[i] === undefined) {\n        props[i] = defaultProps[i]\n      }\n    }\n  }\n\n  return props\n}\n","import { IS_NON_DIMENSIONAL } from '../constants'\nimport { applyRef } from '../util'\nimport options from '../options'\n\n/** Create an element with the given nodeName.\n *\t@param {String} nodeName\n *\t@param {Boolean} [isSvg=false]\tIf `true`, creates an element within the SVG namespace.\n *\t@returns {Element} node\n */\nexport function createNode(nodeName, isSvg) {\n\tlet node = isSvg\n\t\t? options.doc.createElementNS('http://www.w3.org/2000/svg', nodeName)\n\t\t: options.doc.createElement(nodeName)\n\tnode.normalizedNodeName = nodeName\n\treturn node\n}\n\nfunction parseCSSText(cssText) {\n\tlet cssTxt = cssText.replace(/\\/\\*(.|\\s)*?\\*\\//g, ' ').replace(/\\s+/g, ' ')\n\tlet style = {},\n\t\t[a, b, rule] = cssTxt.match(/ ?(.*?) ?{([^}]*)}/) || [a, b, cssTxt]\n\tlet cssToJs = s => s.replace(/\\W+\\w/g, match => match.slice(-1).toUpperCase())\n\tlet properties = rule\n\t\t.split(';')\n\t\t.map(o => o.split(':').map(x => x && x.trim()))\n\tfor (let [property, value] of properties) style[cssToJs(property)] = value\n\treturn style\n}\n\n/** Remove a child node from its parent if attached.\n *\t@param {Element} node\t\tThe node to remove\n */\nexport function removeNode(node) {\n\tlet parentNode = node.parentNode\n\tif (parentNode) parentNode.removeChild(node)\n}\n\n/** Set a named attribute on the given Node, with special behavior for some names and event handlers.\n *\tIf `value` is `null`, the attribute/handler will be removed.\n *\t@param {Element} node\tAn element to mutate\n *\t@param {string} name\tThe name/key to set, such as an event or attribute name\n *\t@param {any} old\tThe last value that was set for this name/node pair\n *\t@param {any} value\tAn attribute value, such as a function to be used as an event handler\n *\t@param {Boolean} isSvg\tAre we currently diffing inside an svg?\n *\t@private\n */\nexport function setAccessor(node, name, old, value, isSvg) {\n\tif (name === 'className') name = 'class'\n\n\tif (name === 'key') {\n\t\t// ignore\n\t} else if (name === 'ref') {\n\t\tapplyRef(old, null)\n\t\tapplyRef(value, node)\n\t} else if (name === 'class' && !isSvg) {\n\t\tnode.className = value || ''\n\t} else if (name === 'style') {\n\t\tif (options.isWeb) {\n\t\t\tif (!value || typeof value === 'string' || typeof old === 'string') {\n\t\t\t\tnode.style.cssText = value || ''\n\t\t\t}\n\t\t\tif (value && typeof value === 'object') {\n\t\t\t\tif (typeof old !== 'string') {\n\t\t\t\t\tfor (let i in old) if (!(i in value)) node.style[i] = ''\n\t\t\t\t}\n\t\t\t\tfor (let i in value) {\n\t\t\t\t\tnode.style[i] =\n\t\t\t\t\t\ttypeof value[i] === 'number' && IS_NON_DIMENSIONAL.test(i) === false\n\t\t\t\t\t\t\t? value[i] + 'px'\n\t\t\t\t\t\t\t: value[i]\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tlet oldJson = old,\n\t\t\t\tcurrentJson = value\n\t\t\tif (typeof old === 'string') {\n\t\t\t\toldJson = parseCSSText(old)\n\t\t\t}\n\t\t\tif (typeof value == 'string') {\n\t\t\t\tcurrentJson = parseCSSText(value)\n\t\t\t}\n\n\t\t\tlet result = {},\n\t\t\t\tchanged = false\n\n\t\t\tif (oldJson) {\n\t\t\t\tfor (let key in oldJson) {\n\t\t\t\t\tif (typeof currentJson == 'object' && !(key in currentJson)) {\n\t\t\t\t\t\tresult[key] = ''\n\t\t\t\t\t\tchanged = true\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfor (let ckey in currentJson) {\n\t\t\t\t\tif (currentJson[ckey] !== oldJson[ckey]) {\n\t\t\t\t\t\tresult[ckey] = currentJson[ckey]\n\t\t\t\t\t\tchanged = true\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (changed) {\n\t\t\t\t\tnode.setStyles(result)\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tnode.setStyles(currentJson)\n\t\t\t}\n\t\t}\n\t} else if (name === 'dangerouslySetInnerHTML') {\n\t\tif (value) node.innerHTML = value.__html || ''\n\t} else if (name[0] == 'o' && name[1] == 'n') {\n\t\tlet useCapture = name !== (name = name.replace(/Capture$/, ''))\n\t\tlet nameLower = name.toLowerCase()\n\t\tname = (nameLower in node ? nameLower : name).slice(2)\n\t\tif (value) {\n\t\t\tif (!old) {\n\t\t\t\tnode.addEventListener(name, eventProxy, useCapture)\n\t\t\t\tif (name == 'tap') {\n\t\t\t\t\tnode.addEventListener('touchstart', touchStart, useCapture)\n\t\t\t\t\tnode.addEventListener('touchend', touchEnd, useCapture)\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tnode.removeEventListener(name, eventProxy, useCapture)\n\t\t\tif (name == 'tap') {\n\t\t\t\tnode.removeEventListener('touchstart', touchStart, useCapture)\n\t\t\t\tnode.removeEventListener('touchend', touchEnd, useCapture)\n\t\t\t}\n\t\t}\n\t\t; (node._listeners || (node._listeners = {}))[name] = value\n\t} else if (name !== 'list' &&\n\t\tname !== 'tagName' &&\n\t\t// HTMLButtonElement.form and HTMLInputElement.form are read-only but can be set using\n\t\t// setAttribute\n\t\tname !== 'form' &&\n\t\tname !== 'type' &&\n\t\tname !== 'size' &&\n\t\tname !== 'download' &&\n\t\tname !== 'href' &&\n\t\t!isSvg &&\n\t\tname in node) {\n\t\tsetProperty(node, name, value == null ? '' : value)\n\t} else {\n\t\tlet ns = isSvg && name !== (name = name.replace(/^xlink:?/, ''))\n\t\tif (value == null || value === false) {\n\t\t\tif (ns)\n\t\t\t\tnode.removeAttributeNS(\n\t\t\t\t\t'http://www.w3.org/1999/xlink',\n\t\t\t\t\tname.toLowerCase()\n\t\t\t\t)\n\t\t\telse node.removeAttribute(name)\n\t\t} else if (typeof value !== 'function') {\n\t\t\tif (ns)\n\t\t\t\tnode.setAttributeNS(\n\t\t\t\t\t'http://www.w3.org/1999/xlink',\n\t\t\t\t\tname.toLowerCase(),\n\t\t\t\t\tvalue\n\t\t\t\t)\n\t\t\telse node.setAttribute(name, value)\n\t\t}\n\t}\n}\n\n/** Attempt to set a DOM property to the given value.\n *\tIE & FF throw for certain property-value combinations.\n */\nfunction setProperty(node, name, value) {\n\ttry {\n\t\tnode[name] = value\n\t} catch (e) { }\n}\n\n/** Proxy an event to hooked event handlers\n *\t@private\n */\nfunction eventProxy(e) {\n\treturn this._listeners[e.type]((options.event && options.event(e)) || e)\n}\n\nfunction touchStart(e) {\n\tthis.___touchX = e.touches[0].pageX\n\tthis.___touchY = e.touches[0].pageY\n\tthis.___scrollTop = document.body.scrollTop\n}\n\nfunction touchEnd(e) {\n\tif (\n\t\tMath.abs(e.changedTouches[0].pageX - this.___touchX) < 30 &&\n\t\tMath.abs(e.changedTouches[0].pageY - this.___touchY) < 30 &&\n\t\tMath.abs(document.body.scrollTop - this.___scrollTop) < 30\n\t) {\n\t\tthis.dispatchEvent(new CustomEvent('tap', { detail: e }))\n\t}\n}\n","import options from './options'\n\nlet styleId = 0\n\nexport function getCtorName(ctor) {\n  for (let i = 0, len = options.styleCache.length; i < len; i++) {\n    let item = options.styleCache[i]\n\n    if (item.ctor === ctor) {\n      return item.attrName\n    }\n  }\n\n  let attrName = 's' + styleId\n  options.styleCache.push({ ctor, attrName })\n  styleId++\n\n  return attrName\n}\n\n// many thanks to https://github.com/thomaspark/scoper/\nexport function scoper(css, prefix) {\n  prefix = '[' + prefix.toLowerCase() + ']'\n  // https://www.w3.org/TR/css-syntax-3/#lexical\n  css = css.replace(/\\/\\*[^*]*\\*+([^/][^*]*\\*+)*\\//g, '')\n  // eslint-disable-next-line\n    let re = new RegExp('([^\\r\\n,{}:]+)(:[^\\r\\n,{}]+)?(,(?=[^{}]*{)|\\s*{)', 'g')\n  /**\n   * Example:\n   *\n   * .classname::pesudo { color:red }\n   *\n   * g1 is normal selector `.classname`\n   * g2 is pesudo class or pesudo element\n   * g3 is the suffix\n   */\n  css = css.replace(re, (g0, g1, g2, g3) => {\n    if (typeof g2 === 'undefined') {\n      g2 = ''\n    }\n\n    /* eslint-ignore-next-line */\n    if (\n      g1.match(\n        /^\\s*(@media|\\d+%?|@-webkit-keyframes|@keyframes|to|from|@font-face)/\n      )\n    ) {\n      return g1 + g2 + g3\n    }\n\n    let appendClass = g1.replace(/(\\s*)$/, '') + prefix + g2\n    //let prependClass = prefix + ' ' + g1.trim() + g2;\n\n    return appendClass + g3\n    //return appendClass + ',' + prependClass + g3;\n  })\n\n  return css\n}\n\nexport function addStyle(cssText, id) {\n  id = id.toLowerCase()\n  let ele = document.getElementById(id)\n  let head = document.getElementsByTagName('head')[0]\n  if (ele && ele.parentNode === head) {\n    head.removeChild(ele)\n  }\n\n  let someThingStyles = document.createElement('style')\n  head.appendChild(someThingStyles)\n  someThingStyles.setAttribute('type', 'text/css')\n  someThingStyles.setAttribute('id', id)\n  if (window.ActiveXObject) {\n    someThingStyles.styleSheet.cssText = cssText\n  } else {\n    someThingStyles.textContent = cssText\n  }\n}\n\nexport function addStyleWithoutId(cssText) {\n  let head = document.getElementsByTagName('head')[0]\n  let someThingStyles = document.createElement('style')\n  head.appendChild(someThingStyles)\n  someThingStyles.setAttribute('type', 'text/css')\n\n  if (window.ActiveXObject) {\n    someThingStyles.styleSheet.cssText = cssText\n  } else {\n    someThingStyles.textContent = cssText\n  }\n}\n\nexport function addScopedAttrStatic(vdom, attr) {\n  if (options.scopedStyle) {\n    scopeVdom(attr, vdom)\n  } \n}\n\nexport function addStyleToHead(style, attr) {\n  if (options.scopedStyle) {\n    if (!options.staticStyleMapping[attr]) {\n      addStyle(scoper(style, attr), attr)\n      options.staticStyleMapping[attr] = true\n    }\n  } else if (!options.staticStyleMapping[attr]) {\n    addStyleWithoutId(style)\n    options.staticStyleMapping[attr] = true\n  }\n}\n\nexport function scopeVdom(attr, vdom) {\n  if (typeof vdom === 'object') {\n    vdom.attributes = vdom.attributes || {}\n    vdom.attributes[attr] = ''\n    vdom.css = vdom.css || {}\n    vdom.css[attr] = ''\n    vdom.children.forEach(child => scopeVdom(attr, child))\n  }\n}\n\nexport function scopeHost(vdom, css) {\n  if (typeof vdom === 'object' && css) {\n    vdom.attributes = vdom.attributes || {}\n    for (let key in css) {\n      vdom.attributes[key] = ''\n    }\n  }\n}\n","import { ATTR_KEY } from '../constants'\nimport { isSameNodeType, isNamedNode } from './index'\nimport { buildComponentFromVNode } from './component'\nimport { createNode, setAccessor } from '../dom/index'\nimport { unmountComponent } from './component'\nimport options from '../options'\nimport { applyRef } from '../util'\nimport { removeNode } from '../dom/index'\nimport { isArray, Fragment } from '../util'\nimport { addStyleToHead, getCtorName } from '../style'\n/** Queue of components that have been mounted and are awaiting componentDidMount */\nexport const mounts = []\n\n/** Diff recursion count, used to track the end of the diff cycle. */\nexport let diffLevel = 0\n\n/** Global flag indicating if the diff is currently within an SVG */\nlet isSvgMode = false\n\n/** Global flag indicating if the diff is performing hydration */\nlet hydrating = false\n\n/** Invoke queued componentDidMount lifecycle methods */\nexport function flushMounts() {\n  let c\n  while ((c = mounts.pop())) {\n    if (options.afterMount) options.afterMount(c)\n    if (c.installed) c.installed()\n    if (c.constructor.css || c.css) {\n      addStyleToHead(c.constructor.css ? c.constructor.css : (typeof c.css === 'function' ? c.css() : c.css), '_s' + getCtorName(c.constructor))\n    }\n  }\n}\n\n/** Apply differences in a given vnode (and it's deep children) to a real DOM Node.\n *\t@param {Element} [dom=null]\t\tA DOM node to mutate into the shape of the `vnode`\n *\t@param {VNode} vnode\t\t\tA VNode (with descendants forming a tree) representing the desired DOM structure\n *\t@returns {Element} dom\t\t\tThe created/mutated element\n *\t@private\n */\nexport function diff(dom, vnode, store, mountAll, parent, componentRoot, updateSelf) {\n  // diffLevel having been 0 here indicates initial entry into the diff (not a subdiff)\n  if (!diffLevel++) {\n    // when first starting the diff, check if we're diffing an SVG or within an SVG\n    isSvgMode = parent != null && parent.ownerSVGElement !== undefined\n\n    // hydration is indicated by the existing element to be diffed not having a prop cache\n    hydrating = dom != null && !(ATTR_KEY in dom)\n  }\n  let ret\n\n  if (isArray(vnode)) {\n    vnode = {\n      nodeName: 'span',\n      children: vnode\n    }\n  } else if(vnode && vnode.nodeName === Fragment) {\n    vnode.nodeName = 'span'\n  }\n\n  ret = idiff(dom, vnode, store, mountAll, componentRoot, updateSelf)\n  // append the element if its a new parent\n  if (parent && ret.parentNode !== parent) parent.appendChild(ret)\n\n  // diffLevel being reduced to 0 means we're exiting the diff\n  if (!--diffLevel) {\n    hydrating = false\n    // invoke queued componentDidMount lifecycle methods\n    if (!componentRoot) flushMounts()\n  }\n\n  return ret\n}\n\n/** Internals of `diff()`, separated to allow bypassing diffLevel / mount flushing. */\nfunction idiff(dom, vnode, store, mountAll, componentRoot, updateSelf) {\n  let out = dom,\n    prevSvgMode = isSvgMode\n\n  // empty values (null, undefined, booleans) render as empty Text nodes\n  if (vnode == null || typeof vnode === 'boolean') vnode = ''\n\n  // If the VNode represents a Component, perform a component diff:\n  let vnodeName = vnode.nodeName\n  if (options.mapping[vnodeName]) {\n    vnode.nodeName = options.mapping[vnodeName]\n    return buildComponentFromVNode(dom, vnode, store, mountAll, updateSelf)\n  }\n  if (typeof vnodeName == 'function') {\n    return buildComponentFromVNode(dom, vnode, store, mountAll, updateSelf)\n  }\n\n  // Fast case: Strings & Numbers create/update Text nodes.\n  if (typeof vnode === 'string' || typeof vnode === 'number') {\n    // update if it's already a Text node:\n    if (\n      dom &&\n      dom.splitText !== undefined &&\n      dom.parentNode &&\n      (!dom._component || componentRoot)\n    ) {\n      /* istanbul ignore if */ /* Browser quirk that can't be covered: https://github.com/developit/preact/commit/fd4f21f5c45dfd75151bd27b4c217d8003aa5eb9 */\n      if (dom.nodeValue != vnode) {\n        dom.nodeValue = vnode\n      }\n    } else {\n      // it wasn't a Text node: replace it with one and recycle the old Element\n      out = document.createTextNode(vnode)\n      if (dom) {\n        if (dom.parentNode) dom.parentNode.replaceChild(out, dom)\n        recollectNodeTree(dom, true)\n      }\n    }\n\n    //ie8 error\n    try {\n      out[ATTR_KEY] = true\n    } catch (e) {}\n\n    return out\n  }\n\n  // Tracks entering and exiting SVG namespace when descending through the tree.\n  isSvgMode =\n    vnodeName === 'svg'\n      ? true\n      : vnodeName === 'foreignObject'\n      ? false\n      : isSvgMode\n\n  // If there's no existing element or it's the wrong type, create a new one:\n  vnodeName = String(vnodeName)\n  if (!dom || !isNamedNode(dom, vnodeName)) {\n    out = createNode(vnodeName, isSvgMode)\n\n    if (dom) {\n      // move children into the replacement node\n      while (dom.firstChild) out.appendChild(dom.firstChild)\n\n      // if the previous Element was mounted into the DOM, replace it inline\n      if (dom.parentNode) dom.parentNode.replaceChild(out, dom)\n\n      // recycle the old element (skips non-Element node types)\n      recollectNodeTree(dom, true)\n    }\n  }\n\n  let fc = out.firstChild,\n    props = out[ATTR_KEY],\n    vchildren = vnode.children\n\n  if (props == null) {\n    props = out[ATTR_KEY] = {}\n    for (let a = out.attributes, i = a.length; i--; )\n      props[a[i].name] = a[i].value\n  }\n\n  // Optimization: fast-path for elements containing a single TextNode:\n  if (\n    !hydrating &&\n    vchildren &&\n    vchildren.length === 1 &&\n    typeof vchildren[0] === 'string' &&\n    fc != null &&\n    fc.splitText !== undefined &&\n    fc.nextSibling == null\n  ) {\n    if (fc.nodeValue != vchildren[0]) {\n      fc.nodeValue = vchildren[0]\n    }\n  }\n  // otherwise, if there are existing or new children, diff them:\n  else if ((vchildren && vchildren.length) || fc != null) {\n    innerDiffNode(\n      out,\n      vchildren,\n      store,\n      mountAll,\n      hydrating || props.dangerouslySetInnerHTML != null,\n      updateSelf\n    )\n  }\n\n  // Apply attributes/props from VNode to the DOM Element:\n  diffAttributes(out, vnode.attributes, props)\n\n  // restore previous SVG mode: (in case we're exiting an SVG namespace)\n  isSvgMode = prevSvgMode\n\n  return out\n}\n\n/** Apply child and attribute changes between a VNode and a DOM Node to the DOM.\n *\t@param {Element} dom\t\t\tElement whose children should be compared & mutated\n *\t@param {Array} vchildren\t\tArray of VNodes to compare to `dom.childNodes`\n *\t@param {Object} store\t\t\tImplicitly descendant context object (from most recent `getChildContext()`)\n *\t@param {Boolean} mountAll\n *\t@param {Boolean} isHydrating\tIf `true`, consumes externally created elements similar to hydration\n */\nfunction innerDiffNode(dom, vchildren, store, mountAll, isHydrating, updateSelf) {\n  let originalChildren = dom.childNodes,\n    children = [],\n    keyed = {},\n    keyedLen = 0,\n    min = 0,\n    len = originalChildren.length,\n    childrenLen = 0,\n    vlen = vchildren ? vchildren.length : 0,\n    j,\n    c,\n    f,\n    vchild,\n    child\n\n  // Build up a map of keyed children and an Array of unkeyed children:\n  if (len !== 0) {\n    for (let i = 0; i < len; i++) {\n      let child = originalChildren[i],\n        props = child[ATTR_KEY],\n        key =\n          vlen && props\n            ? child._component\n              ? child._component.__key\n              : props.key\n            : null\n      if (key != null) {\n        keyedLen++\n        keyed[key] = child\n      } else if (\n        props ||\n        (child.splitText !== undefined\n          ? isHydrating\n            ? child.nodeValue.trim()\n            : true\n          : isHydrating)\n      ) {\n        children[childrenLen++] = child\n      }\n    }\n  }\n\n  if (vlen !== 0) {\n    for (let i = 0; i < vlen; i++) {\n      vchild = vchildren[i]\n      child = null\n\n      // attempt to find a node based on key matching\n      let key = vchild.key\n      if (key != null) {\n        if (keyedLen && keyed[key] !== undefined) {\n          child = keyed[key]\n          keyed[key] = undefined\n          keyedLen--\n        }\n      }\n      // attempt to pluck a node of the same type from the existing children\n      else if (!child && min < childrenLen) {\n        for (j = min; j < childrenLen; j++) {\n          if (\n            children[j] !== undefined &&\n            isSameNodeType((c = children[j]), vchild, isHydrating)\n          ) {\n            child = c\n            children[j] = undefined\n            if (j === childrenLen - 1) childrenLen--\n            if (j === min) min++\n            break\n          }\n        }\n      }\n\n      // morph the matched/found/created DOM child to match vchild (deep)\n      child = idiff(child, vchild, store, mountAll, null, updateSelf)\n\n      f = originalChildren[i]\n      if (child && child !== dom && child !== f) {\n        if (f == null) {\n          dom.appendChild(child)\n        } else if (child === f.nextSibling) {\n          removeNode(f)\n        } else {\n          dom.insertBefore(child, f)\n        }\n      }\n    }\n  }\n\n  // remove unused keyed children:\n  if (keyedLen) {\n    for (let i in keyed)\n      if (keyed[i] !== undefined) recollectNodeTree(keyed[i], false)\n  }\n\n  // remove orphaned unkeyed children:\n  while (min <= childrenLen) {\n    if ((child = children[childrenLen--]) !== undefined)\n      recollectNodeTree(child, false)\n  }\n}\n\n/** Recursively recycle (or just unmount) a node and its descendants.\n *\t@param {Node} node\t\t\t\t\t\tDOM node to start unmount/removal from\n *\t@param {Boolean} [unmountOnly=false]\tIf `true`, only triggers unmount lifecycle, skips removal\n */\nexport function recollectNodeTree(node, unmountOnly) {\n  let component = node._component\n  if (component) {\n    // if node is owned by a Component, unmount that component (ends up recursing back here)\n    unmountComponent(component)\n  } else {\n    // If the node's VNode had a ref function, invoke it with null here.\n    // (this is part of the React spec, and smart for unsetting references)\n    if (node[ATTR_KEY] != null) applyRef(node[ATTR_KEY].ref, null)\n\n    if (unmountOnly === false || node[ATTR_KEY] == null) {\n      removeNode(node)\n    }\n\n    removeChildren(node)\n  }\n}\n\n/** Recollect/unmount all children.\n *\t- we use .lastChild here because it causes less reflow than .firstChild\n *\t- it's also cheaper than accessing the .childNodes Live NodeList\n */\nexport function removeChildren(node) {\n  node = node.lastChild\n  while (node) {\n    let next = node.previousSibling\n    recollectNodeTree(node, true)\n    node = next\n  }\n}\n\n/** Apply differences in attributes from a VNode to the given DOM Element.\n *\t@param {Element} dom\t\tElement with attributes to diff `attrs` against\n *\t@param {Object} attrs\t\tThe desired end-state key-value attribute pairs\n *\t@param {Object} old\t\t\tCurrent/previous attributes (from previous VNode or element's prop cache)\n */\nfunction diffAttributes(dom, attrs, old) {\n  let name\n\n  // remove attributes no longer present on the vnode by setting them to undefined\n  for (name in old) {\n    if (!(attrs && attrs[name] != null) && old[name] != null) {\n      setAccessor(dom, name, old[name], (old[name] = undefined), isSvgMode)\n    }\n  }\n\n  // add new & update changed attributes\n  for (name in attrs) {\n    if (\n      name !== 'children' &&\n      name !== 'innerHTML' &&\n      (!(name in old) ||\n        attrs[name] !==\n          (name === 'value' || name === 'checked' ? dom[name] : old[name]))\n    ) {\n      setAccessor(dom, name, old[name], (old[name] = attrs[name]), isSvgMode)\n    }\n  }\n}\n","import Component from '../component'\nimport { getUse, getPath } from '../util'\nimport options from  '../options'\n/** Retains a pool of Components for re-use, keyed on component name.\n *\tNote: since component names are not unique or even necessarily available, these are primarily a form of sharding.\n *\t@private\n */\nconst components = {}\n\n/** Reclaim a component for later re-use by the recycler. */\nexport function collectComponent(component) {\n  let name = component.constructor.name\n  ;(components[name] || (components[name] = [])).push(component)\n}\n\n/** Create a component. Normalizes differences between PFC's and classful Components. */\nexport function createComponent(Ctor, props, store, vnode) {\n  let list = components[Ctor.name],\n    inst\n\n  if (Ctor.prototype && Ctor.prototype.render) {\n    inst = new Ctor(props, store)\n    Component.call(inst, props, store)\n  } else {\n    inst = new Component(props, store)\n    inst.constructor = Ctor\n    inst.render = doRender\n  }\n  vnode && (inst.scopedCssAttr = vnode.css)\n\n  if (inst.store) {\n\t\tif(inst.use){\n      const use = typeof inst.use === 'function' ? inst.use() : inst.use\n\n      if(options.isMultiStore){\n        let _updatePath = {}\n\t\t\t\tlet using = {}\n\t\t\t\tfor (let storeName in use) {\n\t\t\t\t\t_updatePath[storeName] = {}\n\t\t\t\t\tusing[storeName] = {}\n\t\t\t\t\tgetPath(use[storeName], _updatePath, storeName)\n\t\t\t\t\tgetUse(inst.store[storeName].data, use[storeName], using, storeName)\n\t\t\t\t\tinst.store[storeName].instances.push(inst)\n\t\t\t\t}\n\t\t\t\tinst.using = using\n\t\t\t\tinst._updatePath = _updatePath\n      }else{\n        inst._updatePath = getPath(use)\n        inst.using = getUse(inst.store.data, use)\n        inst.store.instances.push(inst)\n      }\n    }\n\n    if(inst.useSelf){\n      const use = typeof inst.useSelf === 'function' ? inst.useSelf() : inst.useSelf\n\n      if (options.isMultiStore) {\n\t\t\t\tlet _updatePath = {}\n\t\t\t\tlet using = {}\n\t\t\t\tfor (let storeName in use) {\n\t\t\t\t\tgetPath(use[storeName], _updatePath, storeName)\n\t\t\t\t\tgetUse(inst.store[storeName].data, use[storeName], using, storeName)\n\t\t\t\t\tinst.store[storeName].updateSelfInstances.push(inst)\n\t\t\t\t}\n\t\t\t\tinst.usingSelf = using\n\t\t\t\tinst._updateSelfPath = _updatePath\n\t\t\t} else {\n        inst._updateSelfPath = getPath(use)\n        inst.usingSelf = getUse(inst.store.data, use)\n        inst.store.updateSelfInstances.push(inst)\n      }\n\t\t}\n\n\t\tif(inst.compute){\n\t\t\tfor (let key in inst.compute) {\n\t\t\t\tinst.computed[key] = inst.compute[key].call(options.isMultiStore ? inst.store : inst.store.data)\n\t\t\t}\n\t\t}\n\n\n  }\n\n  if (list) {\n    for (let i = list.length; i--; ) {\n      if (list[i].constructor === Ctor) {\n        inst.nextBase = list[i].nextBase\n        list.splice(i, 1)\n        break\n      }\n    }\n  }\n  return inst\n}\n\n/** The `.render()` method for a PFC backing instance. */\nfunction doRender(props, store) {\n  return this.constructor(props, store)\n}\n","import {\n  SYNC_RENDER,\n  NO_RENDER,\n  ASYNC_RENDER,\n  ATTR_KEY\n} from '../constants'\nimport options from '../options'\nimport { extend, applyRef, removeItem } from '../util'\nimport { enqueueRender } from '../render-queue'\nimport { getNodeProps } from './index'\nimport {\n  diff,\n  mounts,\n  diffLevel,\n  flushMounts,\n  recollectNodeTree,\n  removeChildren\n} from './diff'\nimport { createComponent, collectComponent } from './component-recycler'\nimport { removeNode } from '../dom/index'\nimport {\n  addScopedAttrStatic,\n  getCtorName,\n  scopeHost\n} from '../style'\n\n/** Set a component's `props` (generally derived from JSX attributes).\n *\t@param {Object} props\n *\t@param {Object} [opts]\n *\t@param {boolean} [opts.renderSync=false]\tIf `true` and {@link options.syncComponentUpdates} is `true`, triggers synchronous rendering.\n *\t@param {boolean} [opts.render=true]\t\t\tIf `false`, no render will be triggered.\n */\nexport function setComponentProps(component, props, opts, store, mountAll) {\n  if (component._disable) return\n  component._disable = true\n\n  if ((component.__ref = props.ref)) delete props.ref\n  if ((component.__key = props.key)) delete props.key\n\n  if (!component.base || mountAll) {\n    if (component.beforeInstall) component.beforeInstall()\n    if (component.install) component.install()\n  }\n\n  if (!component.prevProps) component.prevProps = component.props\n  component.props = props\n\n  component._disable = false\n\n  if (opts !== NO_RENDER) {\n    if (\n      opts === SYNC_RENDER ||\n      options.syncComponentUpdates !== false ||\n      !component.base\n    ) {\n      renderComponent(component, SYNC_RENDER, mountAll)\n    } else {\n      enqueueRender(component)\n    }\n  }\n\n  applyRef(component.__ref, component)\n}\n\n\n/** Render a Component, triggering necessary lifecycle events and taking High-Order Components into account.\n *\t@param {Component} component\n *\t@param {Object} [opts]\n *\t@param {boolean} [opts.build=false]\t\tIf `true`, component will build and store a DOM node if not already associated with one.\n *\t@private\n */\nexport function renderComponent(component, opts, mountAll, isChild, updateSelf) {\n  if (component._disable) return\n\n  let props = component.props,\n    store = component.store,\n    previousProps = component.prevProps || props,\n    isUpdate = component.base,\n    nextBase = component.nextBase,\n    initialBase = isUpdate || nextBase,\n    initialChildComponent = component._component,\n    skip = false,\n    rendered,\n    inst,\n    cbase\n\n  // if updating\n  if (isUpdate) {\n    component.props = previousProps\n    \n    let receiveResult = true\n    if (component.receiveProps) {\n      receiveResult = component.receiveProps(props, previousProps)\n    }\n    if (receiveResult !== false) {\n      skip = false\n      if (component.beforeUpdate) {\n        component.beforeUpdate(props, store)\n      }\n    } else {\n      skip = true\n    }\n    component.props = props\n  }\n\n  component.prevProps = component.nextBase = null\n\n  if (!skip) {\n    component.beforeRender && component.beforeRender()\n    rendered = component.render(props, store)\n\n    //don't rerender\n    if (component.constructor.css || component.css) {\n      addScopedAttrStatic(\n        rendered,\n        '_s' + getCtorName(component.constructor)\n      )\n    }\n\n    scopeHost(rendered, component.scopedCssAttr)\n\n\n    let childComponent = rendered && rendered.nodeName,\n      toUnmount,\n      base,\n      ctor = options.mapping[childComponent]\n\n    if (ctor) {\n      // set up high order component link\n\n      let childProps = getNodeProps(rendered)\n      inst = initialChildComponent\n\n      if (inst && inst.constructor === ctor && childProps.key == inst.__key) {\n        setComponentProps(inst, childProps, SYNC_RENDER, store, false)\n      } else {\n        toUnmount = inst\n\n        component._component = inst = createComponent(ctor, childProps, store)\n        inst.nextBase = inst.nextBase || nextBase\n        inst._parentComponent = component\n        setComponentProps(inst, childProps, NO_RENDER, store, false)\n        renderComponent(inst, SYNC_RENDER, mountAll, true)\n      }\n\n      base = inst.base\n    } else {\n      cbase = initialBase\n\n      // destroy high order component link\n      toUnmount = initialChildComponent\n      if (toUnmount) {\n        cbase = component._component = null\n      }\n\n      if (initialBase || opts === SYNC_RENDER) {\n        if (cbase) cbase._component = null\n        base = diff(\n          cbase,\n          rendered,\n          store,\n          mountAll || !isUpdate,\n          initialBase && initialBase.parentNode,\n          true,\n          updateSelf\n        )\n      }\n    }\n\n    if (initialBase && base !== initialBase && inst !== initialChildComponent) {\n      let baseParent = initialBase.parentNode\n      if (baseParent && base !== baseParent) {\n        baseParent.replaceChild(base, initialBase)\n\n        if (!toUnmount) {\n          initialBase._component = null\n          recollectNodeTree(initialBase, false)\n        }\n      }\n    }\n\n    if (toUnmount) {\n      unmountComponent(toUnmount)\n    }\n\n    component.base = base\n    if (base && !isChild) {\n      let componentRef = component,\n        t = component\n      while ((t = t._parentComponent)) {\n        ;(componentRef = t).base = base\n      }\n      base._component = componentRef\n      base._componentConstructor = componentRef.constructor\n    }\n  }\n\n  if (!isUpdate || mountAll) {\n    mounts.unshift(component)\n  } else if (!skip) {\n    // Ensure that pending componentDidMount() hooks of child components\n    // are called before the componentDidUpdate() hook in the parent.\n    // Note: disabled as it causes duplicate hooks, see https://github.com/developit/preact/issues/750\n    // flushMounts();\n\n    if (component.afterUpdate) {\n      //deprecated\n      component.afterUpdate(previousProps, store)\n    }\n    if (component.updated) {\n      component.updated(previousProps, store)\n    }\n    if (options.afterUpdate) options.afterUpdate(component)\n  }\n\n  if (component._renderCallbacks != null) {\n    while (component._renderCallbacks.length)\n      component._renderCallbacks.pop().call(component)\n  }\n\n  if (!diffLevel && !isChild) flushMounts()\n}\n\n/** Apply the Component referenced by a VNode to the DOM.\n *\t@param {Element} dom\tThe DOM node to mutate\n *\t@param {VNode} vnode\tA Component-referencing VNode\n *\t@returns {Element} dom\tThe created/mutated element\n *\t@private\n */\nexport function buildComponentFromVNode(dom, vnode, store, mountAll, updateSelf) {\n  let c = dom && dom._component,\n    originalComponent = c,\n    oldDom = dom,\n    isDirectOwner = c && dom._componentConstructor === vnode.nodeName,\n    isOwner = isDirectOwner,\n    props = getNodeProps(vnode)\n  while (c && !isOwner && (c = c._parentComponent)) {\n    isOwner = c.constructor === vnode.nodeName\n  }\n\n  if (c && isOwner && (!mountAll || c._component)) {\n    if(!updateSelf){\n      setComponentProps(c, props, ASYNC_RENDER, store, mountAll)\n    }\n    dom = c.base\n  } else {\n    if (originalComponent && !isDirectOwner) {\n      unmountComponent(originalComponent)\n      dom = oldDom = null\n    }\n\n    c = createComponent(vnode.nodeName, props, store, vnode)\n    if (dom && !c.nextBase) {\n      c.nextBase = dom\n      // passing dom/oldDom as nextBase will recycle it if unused, so bypass recycling on L229:\n      oldDom = null\n    }\n    setComponentProps(c, props, SYNC_RENDER, store, mountAll)\n    dom = c.base\n\n    if (oldDom && dom !== oldDom) {\n      oldDom._component = null\n      recollectNodeTree(oldDom, false)\n    }\n  }\n\n  return dom\n}\n\n/** Remove a component from the DOM and recycle it.\n *\t@param {Component} component\tThe Component instance to unmount\n *\t@private\n */\nexport function unmountComponent(component) {\n  if (options.beforeUnmount) options.beforeUnmount(component)\n\n  let base = component.base\n\n  component._disable = true\n\n\tif (component.uninstall) component.uninstall()\n\n\tif (component.store) {\n    if(options.isMultiStore){\n      for(let key in component.store){\n        const current = component.store[key]\n        current.instances && removeItem(component, current.instances)\n        current.updateSelfInstances && removeItem(component, current.updateSelfInstances)\n      }\n    } else {\n      component.store.instances && removeItem(component, component.store.instances)\n      component.store.updateSelfInstances && removeItem(component, component.store.updateSelfInstances)\n    }\n\t}\n\n  component.base = null\n\n  // recursively tear down & recollect high-order component children:\n  let inner = component._component\n  if (inner) {\n    unmountComponent(inner)\n  } else if (base) {\n    if (base[ATTR_KEY] != null) applyRef(base[ATTR_KEY].ref, null)\n\n    component.nextBase = base\n\n    removeNode(base)\n    collectComponent(component)\n\n    removeChildren(base)\n  }\n\n  applyRef(component.__ref, null)\n}\n","/*\n * obaa 2.1.0\n * By dntzhang\n * Github: https://github.com/Tencent/omi/tree/master/packages/obaa\n * MIT Licensed.\n */\n\n\n// $_r_: root\n// $_c_: prop change callback\n// $_p_: path\n\nfunction obaa(target, arr, callback) {\n\n\tvar eventPropArr = []\n\tif (isArray(target)) {\n\t\tif (target.length === 0) {\n\t\t\ttarget.$_o_ = {\n\t\t\t\t$_r_: target,\n\t\t\t\t$_p_: '#'\n\t\t\t}\n\t\t}\n\t\tmock(target, target)\n\t}\n\tif (target && typeof target === 'object' && Object.keys(target).length === 0) {\n\t\ttrack(target)\n\t\ttarget.$_o_.$_r_ = target\n\t}\n\tfor (var prop in target) {\n\t\tif (target.hasOwnProperty(prop)) {\n\t\t\tif (callback) {\n\t\t\t\tif (isArray(arr) && isInArray(arr, prop)) {\n\t\t\t\t\teventPropArr.push(prop)\n\t\t\t\t\twatch(target, prop, null, target)\n\t\t\t\t} else if (isString(arr) && prop == arr) {\n\t\t\t\t\teventPropArr.push(prop)\n\t\t\t\t\twatch(target, prop, null, target)\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\teventPropArr.push(prop)\n\t\t\t\twatch(target, prop, null, target)\n\t\t\t}\n\t\t}\n\t}\n\tif (!target.$_c_) {\n\t\ttarget.$_c_ = []\n\t}\n\tvar propChanged = callback ? callback : arr\n\ttarget.$_c_.push({\n\t\tall: !callback,\n\t\tpropChanged: propChanged,\n\t\teventPropArr: eventPropArr\n\t})\n}\n\nvar triggerStr = [\n\t'concat',\n\t'copyWithin',\n\t'fill',\n\t'pop',\n\t'push',\n\t'reverse',\n\t'shift',\n\t'sort',\n\t'splice',\n\t'unshift',\n\t'size'\n].join(',')\n\nvar methods = [\n\t'concat',\n\t'copyWithin',\n\t'entries',\n\t'every',\n\t'fill',\n\t'filter',\n\t'find',\n\t'findIndex',\n\t'forEach',\n\t'includes',\n\t'indexOf',\n\t'join',\n\t'keys',\n\t'lastIndexOf',\n\t'map',\n\t'pop',\n\t'push',\n\t'reduce',\n\t'reduceRight',\n\t'reverse',\n\t'shift',\n\t'slice',\n\t'some',\n\t'sort',\n\t'splice',\n\t'toLocaleString',\n\t'toString',\n\t'unshift',\n\t'values',\n\t'size'\n]\n\nfunction mock(target, root) {\n\tmethods.forEach(function (item) {\n\t\ttarget[item] = function () {\n\t\t\tvar old = Array.prototype.slice.call(this, 0)\n\t\t\tvar result = Array.prototype[item].apply(\n\t\t\t\tthis,\n\t\t\t\tArray.prototype.slice.call(arguments)\n\t\t\t)\n\t\t\tif (new RegExp('\\\\b' + item + '\\\\b').test(triggerStr)) {\n\t\t\t\tfor (var cprop in this) {\n\t\t\t\t\tif (\n\t\t\t\t\t\tthis.hasOwnProperty(cprop) &&\n\t\t\t\t\t\t!isFunction(this[cprop])\n\t\t\t\t\t) {\n\t\t\t\t\t\twatch(this, cprop, this.$_o_.$_p_, root)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t//todo\n\t\t\t\tonPropertyChanged(\n\t\t\t\t\t'Array-' + item,\n\t\t\t\t\tthis,\n\t\t\t\t\told,\n\t\t\t\t\tthis,\n\t\t\t\t\tthis.$_o_.$_p_,\n\t\t\t\t\troot\n\t\t\t\t)\n\t\t\t}\n\t\t\treturn result\n\t\t}\n\t\ttarget[\n\t\t\t'pure' + item.substring(0, 1).toUpperCase() + item.substring(1)\n\t\t] = function () {\n\t\t\treturn Array.prototype[item].apply(\n\t\t\t\tthis,\n\t\t\t\tArray.prototype.slice.call(arguments)\n\t\t\t)\n\t\t}\n\t})\n}\n\nfunction watch(target, prop, path, root) {\n\tif (prop === '$_o_') return\n\tif (isFunction(target[prop])) return\n\tif (!target.$_o_) target.$_o_ = {\n\t\t$_r_: root\n\t}\n\tif (path !== undefined && path !== null) {\n\t\ttarget.$_o_.$_p_ = path\n\t} else {\n\t\ttarget.$_o_.$_p_ = '#'\n\t}\n\n\tvar currentValue = (target.$_o_[prop] = target[prop])\n\tObject.defineProperty(target, prop, {\n\t\tget: function () {\n\t\t\treturn this.$_o_[prop]\n\t\t},\n\t\tset: function (value) {\n\t\t\tvar old = this.$_o_[prop]\n\t\t\tthis.$_o_[prop] = value\n\t\t\tonPropertyChanged(\n\t\t\t\tprop,\n\t\t\t\tvalue,\n\t\t\t\told,\n\t\t\t\tthis,\n\t\t\t\ttarget.$_o_.$_p_,\n\t\t\t\troot\n\t\t\t)\n\t\t},\n\t\tconfigurable: true,\n\t\tenumerable: true\n\t})\n\tif (typeof currentValue == 'object') {\n\t\tif (isArray(currentValue)) {\n\t\t\tmock(currentValue, root)\n\t\t\tif (currentValue.length === 0) {\n\t\t\t\ttrack(currentValue, prop, path)\n\t\t\t}\n\t\t}\n\t\tif (currentValue && Object.keys(currentValue).length === 0) {\n\t\t\ttrack(currentValue, prop, path)\n\t\t}\n\t\tfor (var cprop in currentValue) {\n\t\t\tif (currentValue.hasOwnProperty(cprop)) {\n\t\t\t\twatch(\n\t\t\t\t\tcurrentValue,\n\t\t\t\t\tcprop,\n\t\t\t\t\ttarget.$_o_.$_p_ + '-' + prop,\n\t\t\t\t\troot\n\t\t\t\t)\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction track(obj, prop, path) {\n\tif (obj.$_o_) {\n\t\treturn\n\t}\n\tobj.$_o_ = {}\n\tif (path !== undefined && path !== null) {\n\t\tobj.$_o_.$_p_ = path + '-' + prop\n\t} else {\n\t\tif (prop !== undefined && prop !== null) {\n\t\t\tobj.$_o_.$_p_ = '#' + '-' + prop\n\t\t} else {\n\t\t\tobj.$_o_.$_p_ = '#'\n\t\t}\n\t}\n}\n\n\nfunction onPropertyChanged(prop, value, oldValue, target, path, root) {\n\tif (value !== oldValue && (!(nan(value) && nan(oldValue))) && root.$_c_) {\n\t\tvar rootName = getRootName(prop, path)\n\t\tfor (\n\t\t\tvar i = 0, len = root.$_c_.length;\n\t\t\ti < len;\n\t\t\ti++\n\t\t) {\n\t\t\tvar handler = root.$_c_[i]\n\t\t\tif (\n\t\t\t\thandler.all ||\n\t\t\t\tisInArray(handler.eventPropArr, rootName) ||\n\t\t\t\trootName.indexOf('Array-') === 0\n\t\t\t) {\n\t\t\t\thandler.propChanged.call(target, prop, value, oldValue, path)\n\t\t\t}\n\t\t}\n\t}\n\n\tif (prop.indexOf('Array-') !== 0 && typeof value === 'object') {\n\t\twatch(target, prop, target.$_o_.$_p_, root)\n\t}\n}\n\nfunction isFunction(obj) {\n\treturn Object.prototype.toString.call(obj) == '[object Function]'\n}\n\nfunction nan(value) {\n\treturn typeof value === \"number\" && isNaN(value)\n}\n\nfunction isArray(obj) {\n\treturn Object.prototype.toString.call(obj) === '[object Array]'\n}\n\nfunction isString(obj) {\n\treturn typeof obj === 'string'\n}\n\nfunction isInArray(arr, item) {\n\tfor (var i = arr.length; --i > -1;) {\n\t\tif (item === arr[i]) return true\n\t}\n\treturn false\n}\n\n\nfunction getRootName(prop, path) {\n\tif (path === '#') {\n\t\treturn prop\n\t}\n\treturn path.split('-')[1]\n}\n\nobaa.add = function (obj, prop) {\n\twatch(obj, prop, obj.$_o_.$_p_, obj.$_o_.$_r_)\n}\n\nobaa.set = function (obj, prop, value) {\n\tif (obj[prop] === undefined) {\n\t\twatch(obj, prop, obj.$_o_.$_p_, obj.$_o_.$_r_)\n\t}\n\tobj[prop] = value\n}\n\nArray.prototype.size = function (length) {\n\tthis.length = length\n}\n\nexport default obaa\n","import { diff } from './vdom/diff'\nimport obaa from './obaa'\nimport { getUse } from './util'\nimport options from './options'\n\n/** Render JSX into a `parent` Element.\n *\t@param {VNode} vnode\t\tA (JSX) VNode to render\n *\t@param {Element} parent\t\tDOM element to render into\n *\t@param {object} [store]\n *\t@public\n */\nexport function render(vnode, parent, store, empty, merge) {\n  parent = typeof parent === 'string' ? document.querySelector(parent) : parent\n\n  if (store) {\n    if (store.data) {\n      obsStore(store)\n    } else {\n      options.isMultiStore = true\n      for (let key in store) {\n        if (store[key].data) {\n          obsStore(store[key], key)\n        }\n      }\n    }\n  }\n\n\n  if (empty) {\n    while (parent.firstChild) {\n      parent.removeChild(parent.firstChild)\n    }\n  }\n\n  if (merge) {\n    merge =\n      typeof merge === 'string'\n        ? document.querySelector(merge)\n        : merge\n  }\n\n  return diff(merge, vnode, store, false, parent, false)\n}\n\nfunction obsStore(store, storeName){\n\n  store.instances = []\n  store.updateSelfInstances = []\n  extendStoreUpate(store, storeName)\n\n  obaa(store.data, (prop, val, old, path) => {\n    const patchs = {}\n    const key = fixPath(path + '-' + prop)\n    patchs[key] = true\n    store.update(patchs)\n  })\n}\n\nexport function merge(vnode, merge, store) {\n  obsStore(store)\n\n  merge =\n    typeof merge === 'string'\n      ? document.querySelector(merge)\n      : merge\n\n  return diff(merge, vnode, store)\n}\n\nfunction extendStoreUpate(store, key) {\n  store.update = function(patch) {\n    if (Object.keys(patch).length > 0) {\n      this.instances.forEach(instance => {\n\t\t\t\tcompute(instance, key)\n        if (key) {\n\t\t\t\t\tif ((\n\t\t\t\t\t\t\tinstance._updatePath && instance._updatePath[key] && needUpdate(patch, instance._updatePath[key]))) {\n\t\t\t\t\t\tif (instance.use) {\n\t\t\t\t\t\t\tgetUse(store.data, (typeof instance.use === 'function' ? instance.use() : instance.use)[key], instance.using, key)\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tinstance.update()\n\t\t\t\t\t}\n\t\t\t\t} else {\n          if (instance._updatePath && needUpdate(patch, instance._updatePath)) {\n            if(instance.use){\n              instance.using = getUse(store.data, typeof instance.use === 'function' ? instance.use() : instance.use)\n            }\n            instance.update()\n          }\n        }\n      })\n\n      this.updateSelfInstances.forEach(instance => {\n\t\t\t\tcompute(instance, key)\n        if (key) {\n\t\t\t\t\tif ((\n\t\t\t\t\t\t\tinstance._updateSelfPath && instance._updateSelfPath[key] && needUpdate(patch, instance._updateSelfPath[key]))) {\n\t\t\t\t\t\tif (instance.useSelf) {\n\t\t\t\t\t\t\tgetUse(store.data, (typeof instance.useSelf === 'function' ? instance.useSelf() : instance.useSelf)[key], instance.usingSelf, key)\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tinstance.updateSelf()\n\t\t\t\t\t}\n\t\t\t\t} else {\n          if (instance._updateSelfPath && needUpdate(patch, instance._updateSelfPath)) {\n            instance.usingSelf = getUse(store.data, typeof instance.useSelf === 'function' ? instance.useSelf() : instance.useSelf)\n            instance.updateSelf()\n          }\n        }\n      })\n\n      this.onChange && this.onChange(patch)\n    }\n  }\n}\n\nfunction compute(instance, isMultiStore) {\n\tif (instance.compute) {\n\t\tfor (let ck in instance.compute) {\n\t\t\tinstance.computed[ck] = instance.compute[ck].call(isMultiStore ? instance.store : instance.store.data)\n\t\t}\n\t}\n}\n\nexport function needUpdate(diffResult, updatePath) {\n  for (let keyA in diffResult) {\n    if (updatePath[keyA]) {\n      return true\n    }\n    for (let keyB in updatePath) {\n      if (includePath(keyA, keyB)) {\n        return true\n      }\n    }\n  }\n  return false\n}\n\nfunction includePath(pathA, pathB) {\n  if (pathA.indexOf(pathB) === 0) {\n    const next = pathA.substr(pathB.length, 1)\n    if (next === '[' || next === '.') {\n      return true\n    }\n  }\n  return false\n}\n\nexport function fixPath(path) {\n  let mpPath = ''\n  const arr = path.replace('#-', '').split('-')\n  arr.forEach((item, index) => {\n    if (index) {\n      if (isNaN(Number(item))) {\n        mpPath += '.' + item\n      } else {\n        mpPath += '[' + item + ']'\n      }\n    } else {\n      mpPath += item\n    }\n  })\n  return mpPath\n}\n\n","import options from './options'\nimport Component from './component'\n\nconst storeHelpers = ['use', 'useSelf']\n\nexport function define(name, ctor, config) {\n  if(ctor.is === 'WeElement'){\n    options.mapping[name] = ctor\n  } else {\n\n    if(typeof config === 'string'){\n      config = { css: config }\n\t\t} else {\n      config = config || {}\n    }\n\n    class Comp extends Component {\n\n      static css = config.css\n\n\t\t\tstatic propTypes = config.propTypes\n\n\t\t\tstatic defaultProps = config.defaultProps\n\n\t\t\tcompute = config.compute\n\n      render() {\n        return ctor.call(this, this)\n      }\n\n\t\t}\n\n\t\tfor (let key in config) {\n\t\t\tif (typeof config[key] === 'function') {\n\t\t\t\tComp.prototype[key] = function () {\n\t\t\t\t\treturn config[key].apply(this, arguments)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tstoreHelpers.forEach(func => {\n\t\t\tif (config[func] && config[func] !== 'function') {\n\t\t\t\tComp.prototype[func] = function () {\n\t\t\t\t\treturn config[func]\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\n    options.mapping[name] = Comp\n  }\n}\n","/**\n * classNames based on https://github.com/JedWatson/classnames\n * by Jed Watson\n * Licensed under the MIT License\n * https://github.com/JedWatson/classnames/blob/master/LICENSE\n * modified by dntzhang\n */\n\nvar hasOwn = {}.hasOwnProperty\n\nexport function classNames() {\n  var classes = []\n\n  for (var i = 0; i < arguments.length; i++) {\n    var arg = arguments[i]\n    if (!arg) continue\n\n    var argType = typeof arg\n\n    if (argType === 'string' || argType === 'number') {\n      classes.push(arg)\n    } else if (Array.isArray(arg) && arg.length) {\n      var inner = classNames.apply(null, arg)\n      if (inner) {\n        classes.push(inner)\n      }\n    } else if (argType === 'object') {\n      for (var key in arg) {\n        if (hasOwn.call(arg, key) && arg[key]) {\n          classes.push(key)\n        }\n      }\n    }\n  }\n\n  return classes.join(' ')\n}\n\nexport function extractClass() {\n  const [props, ...args] = Array.prototype.slice.call(arguments, 0)\n  if (props) {\n    if (props['class']) {\n      args.unshift(props['class'])\n      delete props['class']\n    } else if (props.className) {\n      args.unshift(props.className)\n      delete props.className\n    }\n  }\n  if (args.length > 0) {\n    return { 'class': classNames.apply(null, args) }\n  }\n}\n","/**\n * preact-render-to-string based on preact-render-to-string\n * by Jason Miller\n * Licensed under the MIT License\n * https://github.com/developit/preact-render-to-string\n *\n * modified by dntzhang\n */\n\nimport options from './options'\n\nimport {\n  addScopedAttrStatic,\n  getCtorName,\n  scopeHost,\n  scoper\n} from './style'\n\n\nconst encodeEntities = s => String(s)\n  .replace(/&/g, '&amp;')\n  .replace(/</g, '&lt;')\n  .replace(/>/g, '&gt;')\n  .replace(/\"/g, '&quot;');\n\nconst indent = (s, char) => String(s).replace(/(\\n+)/g, '$1' + (char || '\\t'));\n\nconst mapping = options.mapping\n\nconst VOID_ELEMENTS = /^(area|base|br|col|embed|hr|img|input|link|meta|param|source|track|wbr)$/;\n\nconst isLargeString = (s, length, ignoreLines) => (String(s).length > (length || 40) || (!ignoreLines && String(s).indexOf('\\n') !== -1) || String(s).indexOf('<') !== -1);\n\nconst JS_TO_CSS = {};\n\n// Convert an Object style to a CSSText string\nfunction styleObjToCss(s) {\n  let str = '';\n  for (let prop in s) {\n    let val = s[prop];\n    if (val != null) {\n      if (str) str += ' ';\n      // str += jsToCss(prop);\n      str += JS_TO_CSS[prop] || (JS_TO_CSS[prop] = prop.replace(/([A-Z])/g, '-$1').toLowerCase());\n      str += ': ';\n      str += val;\n      if (typeof val === 'number' && IS_NON_DIMENSIONAL.test(prop) === false) {\n        str += 'px';\n      }\n      str += ';';\n    }\n  }\n  return str || undefined;\n}\n\nexport function renderToString(vnode, opts, store, isSvgMode){\n  store = store || {};\n  opts = Object.assign({\n    scopedCSS: true\n  },opts)\n  const css = {}\n  const html = _renderToString(vnode, opts, store, isSvgMode, css)\n  return {\n    css: Object.values(css),\n    html: html\n  }\n}\n\n/** The default export is an alias of `render()`. */\nfunction _renderToString(vnode, opts, store, isSvgMode, css) {\n  if (vnode == null || typeof vnode === 'boolean') {\n    return '';\n  }\n\n  let nodeName = vnode.nodeName,\n    attributes = vnode.attributes,\n    isComponent = false;\n  \n\n  let pretty = true && opts.pretty,\n    indentChar = pretty && typeof pretty === 'string' ? pretty : '\\t';\n\n  // #text nodes\n  if (typeof vnode !== 'object' && !nodeName) {\n    return encodeEntities(vnode);\n  }\n\n  // components\n  const ctor = mapping[nodeName]\n  if (ctor) {\n    isComponent = true;\n\n    let props = getNodeProps(vnode),\n      rendered;\n    // class-based components\n    let c = new ctor(props, store);\n    // turn off stateful re-rendering:\n    c._disable = c.__x = true;\n    c.props = props;\n    c.store = store;\n    if (c.install) c.install();\n    if (c.beforeRender) c.beforeRender();\n    rendered = c.render(c.props, c.store);\n\n    if(opts.scopedCSS){\n\n      if (c.constructor.css || c.css) {\n\n        const cssStr = c.constructor.css ? c.constructor.css : (typeof c.css === 'function' ? c.css() : c.css)\n        const cssAttr = '_s' + getCtorName(c.constructor)\n        css[cssAttr] = {\n          id: cssAttr,\n          css: scoper(cssStr, cssAttr)\n        }\n        addScopedAttrStatic(\n          rendered,\n          cssAttr\n        )\n      }\n    \n      c.scopedCSSAttr = vnode.css\n      scopeHost(rendered, c.scopedCSSAttr)\n    }\n\n    return _renderToString(rendered, opts, store, false, css);\n  }\n\n\n  // render JSX to HTML\n  let s = '', html;\n\n  if (attributes) {\n    let attrs = Object.keys(attributes);\n\n    // allow sorting lexicographically for more determinism (useful for tests, such as via preact-jsx-chai)\n    if (opts && opts.sortAttributes === true) attrs.sort();\n\n    for (let i = 0; i < attrs.length; i++) {\n      let name = attrs[i],\n        v = attributes[name];\n      if (name === 'children') continue;\n\n      if (name.match(/[\\s\\n\\\\/='\"\\0<>]/)) continue;\n\n      if (!(opts && opts.allAttributes) && (name === 'key' || name === 'ref')) continue;\n\n      if (name === 'className') {\n        if (attributes['class']) continue;\n        name = 'class';\n      }\n      else if (isSvgMode && name.match(/^xlink:?./)) {\n        name = name.toLowerCase().replace(/^xlink:?/, 'xlink:');\n      }\n\n      if (name === 'style' && v && typeof v === 'object') {\n        v = styleObjToCss(v);\n      }\n\n      let hooked = opts.attributeHook && opts.attributeHook(name, v, store, opts, isComponent);\n      if (hooked || hooked === '') {\n        s += hooked;\n        continue;\n      }\n\n      if (name === 'dangerouslySetInnerHTML') {\n        html = v && v.__html;\n      }\n      else if ((v || v === 0 || v === '') && typeof v !== 'function') {\n        if (v === true || v === '') {\n          v = name;\n          // in non-xml mode, allow boolean attributes\n          if (!opts || !opts.xml) {\n            s += ' ' + name;\n            continue;\n          }\n        }\n        s += ` ${name}=\"${encodeEntities(v)}\"`;\n      }\n    }\n  }\n\n  // account for >1 multiline attribute\n  if (pretty) {\n    let sub = s.replace(/^\\n\\s*/, ' ');\n    if (sub !== s && !~sub.indexOf('\\n')) s = sub;\n    else if (pretty && ~s.indexOf('\\n')) s += '\\n';\n  }\n\n  s = `<${nodeName}${s}>`;\n  if (String(nodeName).match(/[\\s\\n\\\\/='\"\\0<>]/)) throw s;\n\n  let isVoid = String(nodeName).match(VOID_ELEMENTS);\n  if (isVoid) s = s.replace(/>$/, ' />');\n\n  let pieces = [];\n  if (html) {\n    // if multiline, indent.\n    if (pretty && isLargeString(html)) {\n      html = '\\n' + indentChar + indent(html, indentChar);\n    }\n    s += html;\n  }\n  else if (vnode.children) {\n    let hasLarge = pretty && ~s.indexOf('\\n');\n    for (let i = 0; i < vnode.children.length; i++) {\n      let child = vnode.children[i];\n      if (child != null && child !== false) {\n        let childSvgMode = nodeName === 'svg' ? true : nodeName === 'foreignObject' ? false : isSvgMode,\n          ret = _renderToString(child, opts, store, childSvgMode, css);\n        if (pretty && !hasLarge && isLargeString(ret)) hasLarge = true;\n        if (ret) pieces.push(ret);\n      }\n    }\n    if (pretty && hasLarge) {\n      for (let i = pieces.length; i--;) {\n        pieces[i] = '\\n' + indentChar + indent(pieces[i], indentChar);\n      }\n    }\n  }\n\n  if (pieces.length) {\n    s += pieces.join('');\n  }\n  else if (opts && opts.xml) {\n    return s.substring(0, s.length - 1) + ' />';\n  }\n\n  if (!isVoid) {\n    if (pretty && ~s.indexOf('\\n')) s += '\\n';\n    s += `</${nodeName}>`;\n  }\n\n  return s\n}\n\nfunction assign(obj, props) {\n  for (let i in props) obj[i] = props[i];\n  return obj;\n}\n\nfunction getNodeProps(vnode) {\n  let props = assign({}, vnode.attributes);\n  props.children = vnode.children;\n\n  let defaultProps = vnode.nodeName.defaultProps;\n  if (defaultProps !== undefined) {\n    for (let i in defaultProps) {\n      if (props[i] === undefined) {\n        props[i] = defaultProps[i];\n      }\n    }\n  }\n\n  return props;\n}","function getGlobal() {\n  if (\n    typeof global !== 'object' ||\n    !global ||\n    global.Math !== Math ||\n    global.Array !== Array\n  ) {\n    if (typeof self !== 'undefined') {\n      return self\n    } else if (typeof window !== 'undefined') {\n      return window\n    } else if (typeof global !== 'undefined') {\n      return global\n    }\n    return (function() {\n      return this\n    })()\n  }\n  return global\n}\n\n/** Global options\n *\t@public\n *\t@namespace options {Object}\n */\nexport default {\n  scopedStyle: true,\n  mapping: {},\n  isWeb: true,\n  staticStyleMapping: {},\n  doc: typeof document === 'object' ? document : null,\n  root: getGlobal(),\n  //styleCache :[{ctor:ctor,ctorName:ctorName,style:style}]\n  styleCache: [],\n\tisMultiStore: false\n  //componentChange(component, element) { },\n  /** If `true`, `prop` changes trigger synchronous component updates.\n   *\t@name syncComponentUpdates\n   *\t@type Boolean\n   *\t@default true\n   */\n  //syncComponentUpdates: true,\n\n  /** Processes all created VNodes.\n   *\t@param {VNode} vnode\tA newly-created VNode to normalize/process\n   */\n  //vnode(vnode) { }\n\n  /** Hook invoked after a component is mounted. */\n  //afterMount(component) { },\n\n  /** Hook invoked after the DOM is updated with a component's latest render. */\n  //afterUpdate(component) { }\n\n  /** Hook invoked immediately before a component is unmounted. */\n  // beforeUnmount(component) { }\n}\n","import { FORCE_RENDER } from './constants'\nimport { renderComponent } from './vdom/component'\nimport options from './options'\nimport { nProps, assign } from './util'\n\nlet id = 0\n\nexport default class Component {\n  static is = 'WeElement'\n\n  constructor(props, store) {\n    this.props = assign({ },\n      this.constructor.defaultProps,\n      props\n    )\n    this.elementId = id++\n\n    this._preCss = null\n\n\t\tthis.store = store\n\t\tthis.computed = {}\n  }\n\n  update(ignoreAttrs, updateSelf, callback) {\n    if(this._willUpdate) return\n    this._willUpdate = true\n    if (callback)\n      (this._renderCallbacks = this._renderCallbacks || []).push(callback)\n    renderComponent(this, FORCE_RENDER)\n    if (options.componentChange) options.componentChange(this, this.base)\n    this._willUpdate = false\n  }\n\n  updateSelf() {\n    if(this._willUpdateSelf) return\n    this._willUpdateSelf = true\n    renderComponent(this, FORCE_RENDER, null, null, true)\n    this._willUpdateSelf = false\n  }\n\n\n  fire(type, data) {\n    Object.keys(this.props).every(key => {\n      if ('on' + type.toLowerCase() === key.toLowerCase()) {\n        this.props[key]({ detail: data })\n        return false\n      }\n      return true\n    })\n  }\n\n  render() {}\n}\n","import { h, h as createElement } from './h'\nimport { cloneElement } from './clone-element'\nimport Component from './component'\nimport { render, merge } from './render'\nimport { rerender } from './render-queue'\nimport options from './options'\nimport { define } from './define'\nimport { rpx } from './rpx'\nimport { tag } from './tag'\nimport { classNames, extractClass } from './class'\nimport { getHost } from './get-host'\nimport { renderToString } from './render-to-string'\nimport obaa from './obaa'\nimport { Fragment } from './util'\n\nh.f = Fragment\n\n\nconst WeElement = Component\nconst defineElement = define\nfunction createRef() {\n\treturn {}\n}\n\noptions.root.Omi = {\n\th,\n\tcreateElement,\n\tcloneElement,\n\tcreateRef,\n\tComponent,\n\trender,\n\trerender,\n\toptions,\n\tWeElement,\n\tdefine,\n\trpx,\n\tdefineElement,\n\tclassNames,\n\textractClass,\n\tgetHost,\n\trenderToString,\n\ttag,\n\tmerge,\n\tobaa\n}\noptions.root.omi = options.root.Omi\noptions.root.Omi.version = 'omio-2.8.3'\n\nexport default {\n\th,\n\tcreateElement,\n\tcloneElement,\n\tcreateRef,\n\tComponent,\n\trender,\n\trerender,\n\toptions,\n\tWeElement,\n\tdefine,\n\trpx,\n\tdefineElement,\n\tclassNames,\n\textractClass,\n\tgetHost,\n\trenderToString,\n\ttag,\n\tmerge,\n\tobaa\n}\n\nexport {\n\th,\n\tcreateElement,\n\tcloneElement,\n\tcreateRef,\n\tComponent,\n\trender,\n\trerender,\n\toptions,\n\tWeElement,\n\tdefine,\n\trpx,\n\tdefineElement,\n\tclassNames,\n\textractClass,\n\tgetHost,\n\trenderToString,\n\ttag,\n\tmerge,\n\tobaa\n}\n"]}