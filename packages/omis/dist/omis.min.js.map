{"version":3,"sources":["../src/obaa.js","../src/path.js","../src/react.js","../src/omis.js"],"names":["obaa","target","arr","callback","eventPropArr","isArray","length","__o_","__r_","__p_","mock","prop","hasOwnProperty","isInArray","push","watch","isString","__c_","all","propChanged","root","methods","forEach","item","old","Array","prototype","slice","call","this","result","apply","arguments","RegExp","test","triggerStr","cprop","isFunction","onPropertyChanged","substring","toUpperCase","path","currentValue","Object","defineProperty","get","set","value","configurable","enumerable","oldValue","nan","rootName","getRootName","i","len","handler","indexOf","obj","toString","isNaN","split","getPath","out","name","tempPath","keys","needUpdate","diffResult","updatePath","keyA","keyB","includePath","pathA","pathB","next","substr","fixPath","mpPath","replace","index","$","options","_class","_temp","store","data","observe","isMultiStore","key","_React$Component","props","_classCallCheck","_this","_possibleConstructorReturn","state","__$id_","use","storeName","components","__$updatePath_","useSelf","updateSelfPath","updateSelfComponents","__$updateSelfPath_","_inherits","shouldComponentUpdate","currentComponent","isSelf","componentWillUnmount","removeItem","render","React","css","splice","val","patch","component","p","update","sp","setState","renderer","app","renderTo","reset","document","querySelector","s","add","size","module","exports","Omis","self"],"mappings":"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","file":"omis.min.js","sourcesContent":["export function obaa(target, arr, callback) {\n  let eventPropArr = []\n  if (isArray(target)) {\n    if (target.length === 0) {\n      target.__o_ = {\n        __r_: target,\n        __p_: '#'\n      }\n    }\n    mock(target, target)\n  }\n  for (let prop in target) {\n    if (target.hasOwnProperty(prop)) {\n      if (callback) {\n        if (isArray(arr) && isInArray(arr, prop)) {\n          eventPropArr.push(prop)\n          watch(target, prop, null, target)\n        } else if (isString(arr) && prop === arr) {\n          eventPropArr.push(prop)\n          watch(target, prop, null, target)\n        }\n      } else {\n        eventPropArr.push(prop)\n        watch(target, prop, null, target)\n      }\n    }\n  }\n  if (!target.__c_) {\n    target.__c_ = []\n  }\n  let propChanged = callback ? callback : arr\n  target.__c_.push({\n    all: !callback,\n    propChanged,\n    eventPropArr\n  })\n}\n\nlet triggerStr = [\n  'concat',\n  'copyWithin',\n  'fill',\n  'pop',\n  'push',\n  'reverse',\n  'shift',\n  'sort',\n  'splice',\n  'unshift',\n  'size'\n].join(',')\n\nlet methods = [\n  'concat',\n  'copyWithin',\n  'entries',\n  'every',\n  'fill',\n  'filter',\n  'find',\n  'findIndex',\n  'forEach',\n  'includes',\n  'indexOf',\n  'join',\n  'keys',\n  'lastIndexOf',\n  'map',\n  'pop',\n  'push',\n  'reduce',\n  'reduceRight',\n  'reverse',\n  'shift',\n  'slice',\n  'some',\n  'sort',\n  'splice',\n  'toLocaleString',\n  'toString',\n  'unshift',\n  'values',\n  'size'\n]\n\nfunction mock(target, root) {\n  methods.forEach(item => {\n    target[item] = function() {\n      let old = Array.prototype.slice.call(this, 0)\n      let result = Array.prototype[item].apply(\n        this,\n        Array.prototype.slice.call(arguments)\n      )\n      if (new RegExp('\\\\b' + item + '\\\\b').test(triggerStr)) {\n        for (let cprop in this) {\n          if (this.hasOwnProperty(cprop) && !isFunction(this[cprop])) {\n            watch(this, cprop, this.__o_.__p_, root)\n          }\n        }\n        //todo\n        onPropertyChanged(\n          'Array-' + item,\n          this,\n          old,\n          this,\n          this.__o_.__p_,\n          root\n        )\n      }\n      return result\n    }\n    target[\n      'pure' + item.substring(0, 1).toUpperCase() + item.substring(1)\n    ] = function() {\n      return Array.prototype[item].apply(\n        this,\n        Array.prototype.slice.call(arguments)\n      )\n    }\n  })\n}\n\nfunction watch(target, prop, path, root) {\n  if (prop === '__o_') return\n  if (isFunction(target[prop])) return\n  if (!target.__o_)\n    target.__o_ = {\n      __r_: root\n    }\n  if (path !== undefined && path !== null) {\n    target.__o_.__p_ = path\n  } else {\n    target.__o_.__p_ = '#'\n  }\n\n  let currentValue = (target.__o_[prop] = target[prop])\n  Object.defineProperty(target, prop, {\n    get() {\n      return this.__o_[prop]\n    },\n    set(value) {\n      let old = this.__o_[prop]\n      this.__o_[prop] = value\n      onPropertyChanged(prop, value, old, this, target.__o_.__p_, root)\n    },\n    configurable: true,\n    enumerable: true\n  })\n  if (typeof currentValue === 'object') {\n    if (isArray(currentValue)) {\n      mock(currentValue, root)\n      if (currentValue.length === 0) {\n        if (!currentValue.__o_) currentValue.__o_ = {}\n        if (path !== undefined && path !== null) {\n          currentValue.__o_.__p_ = path + '-' + prop\n        } else {\n          currentValue.__o_.__p_ = '#-' + prop\n        }\n      }\n    }\n    for (let cprop in currentValue) {\n      if (currentValue.hasOwnProperty(cprop)) {\n        watch(currentValue, cprop, target.__o_.__p_ + '-' + prop, root)\n      }\n    }\n  }\n}\n\nfunction onPropertyChanged(prop, value, oldValue, target, path, root) {\n  if (value !== oldValue && !(nan(value) && nan(oldValue)) && root.__c_) {\n    let rootName = getRootName(prop, path)\n    for (let i = 0, len = root.__c_.length; i < len; i++) {\n      let handler = root.__c_[i]\n      if (\n        handler.all ||\n        isInArray(handler.eventPropArr, rootName) ||\n        rootName.indexOf('Array-') === 0\n      ) {\n        handler.propChanged.call(target, prop, value, oldValue, path)\n      }\n    }\n  }\n\n  if (prop.indexOf('Array-') !== 0 && typeof value === 'object') {\n    watch(target, prop, target.__o_.__p_, root)\n  }\n}\n\nfunction isFunction(obj) {\n  return Object.prototype.toString.call(obj) === '[object Function]'\n}\n\nfunction nan(value) {\n  return typeof value === 'number' && isNaN(value)\n}\n\nfunction isArray(obj) {\n  return Object.prototype.toString.call(obj) === '[object Array]'\n}\n\nfunction isString(obj) {\n  return typeof obj === 'string'\n}\n\nfunction isInArray(arr, item) {\n  for (let i = arr.length; --i > -1; ) {\n    if (item === arr[i]) return true\n  }\n  return false\n}\n\nfunction getRootName(prop, path) {\n  if (path === '#') {\n    return prop\n  }\n  return path.split('-')[1]\n}\n\nobaa.add = function(obj, prop) {\n  watch(obj, prop, obj.__o_.__p_, obj.__o_.__r_)\n}\n\nobaa.set = function(obj, prop, value) {\n  watch(obj, prop, obj.__o_.__p_, obj.__o_.__r_)\n  obj[prop] = value\n}\n\n//@ts-ignore\n/* eslint-disable */\nArray.prototype.size = function (length) {\n  this.length = length\n}","export function getUsing(data, paths) {\n  const obj = []\n  paths.forEach((path, index) => {\n    const isPath = typeof path === 'string'\n    if (isPath) {\n      obj[index] = getTargetByPath(data, path)\n    } else {\n      const key = Object.keys(path)[0]\n      const value = path[key]\n      if (typeof value === 'string') {\n        obj[index] = getTargetByPath(data, value)\n      } else {\n        const tempPath = value[0]\n        if (typeof tempPath === 'string') {\n          const tempVal = getTargetByPath(data, tempPath)\n          obj[index] = value[1] ? value[1](tempVal) : tempVal\n        } else {\n          const args = []\n          tempPath.forEach(path => {\n            args.push(getTargetByPath(data, path))\n          })\n          obj[index] = value[1].apply(null, args)\n        }\n      }\n      obj[key] = obj[index]\n    }\n  })\n  return obj\n}\n\nexport function getTargetByPath(origin, path) {\n  const arr = path\n    .replace(/]/g, '')\n    .replace(/\\[/g, '.')\n    .split('.')\n  let current = origin\n  for (let i = 0, len = arr.length; i < len; i++) {\n    current = current[arr[i]]\n  }\n  return current\n}\n\nexport function getPath(obj, out, name) {\n  const result = {}\n  obj.forEach(item => {\n    if (typeof item === 'string') {\n      result[item] = true\n    } else {\n      const tempPath = item[Object.keys(item)[0]]\n      if (typeof tempPath === 'string') {\n        result[tempPath] = true\n      } else if (typeof tempPath[0] === 'string') {\n        result[tempPath[0]] = true\n      } else {\n        tempPath[0].forEach(path => (result[path] = true))\n      }\n    }\n  })\n  out && (out[name] = result)\n  return result\n}\n\n\nexport function needUpdate(diffResult, updatePath) {\n  for (let keyA in diffResult) {\n    if (updatePath[keyA]) {\n      return true\n    }\n    for (let keyB in updatePath) {\n      if (includePath(keyA, keyB)) {\n        return true\n      }\n    }\n  }\n  return false\n}\n\nfunction includePath(pathA, pathB) {\n  if (pathA.indexOf(pathB) === 0) {\n    const next = pathA.substr(pathB.length, 1)\n    if (next === '[' || next === '.') {\n      return true\n    }\n  }\n  return false\n}\n\nexport function fixPath(path) {\n  let mpPath = ''\n  const arr = path.replace('#-', '').split('-')\n  arr.forEach((item, index) => {\n    if (index) {\n      if (isNaN(Number(item))) {\n        mpPath += '.' + item\n      } else {\n        mpPath += '[' + item + ']'\n      }\n    } else {\n      mpPath += item\n    }\n  })\n  return mpPath\n}\n","import * as React from 'react'\nimport { obaa } from './obaa'\nimport { getPath, needUpdate, fixPath } from './path'\n\nlet isSelf = false\nlet currentComponent = null\nlet isMultiStore = false\n\nexport function $(options) {\n  if (options.store) {\n    $.store = options.store\n    if ($.store.data) {\n      observe($.store)\n    } else {\n      isMultiStore = true\n      for (let key in $.store) {\n        if ($.store[key].data) {\n          observe($.store[key], key)\n        }\n      }\n    }\n\n  }\n\n\n  return class extends React.Component {\n    state = {\n      __$id_: 0\n    }\n\n    static css = options.css\n\n    constructor(props) {\n      super(props)\n\n\n      if (isMultiStore) {\n\n        if (options.use) {\n          let updatePath = {}\n          for (let storeName in options.use) {\n            getPath(options.use[storeName], updatePath, storeName)\n            $.store[storeName].components.push(this)\n          }\n          this.__$updatePath_ = updatePath\n\n\n        }\n\n        if (options.useSelf) {\n          let updateSelfPath = {}\n          for (let storeName in options.useSelf) {\n            getPath(options.useSelf[storeName], updateSelfPath, storeName)\n            $.store[storeName].updateSelfComponents.push(this)\n          }\n          this.__$updateSelfPath_ = updateSelfPath\n        }\n\n\n      } else {\n        if (options.use) {\n          $.store.components.push(this)\n          this.__$updatePath_ = getPath(options.use)\n        }\n        if (options.useSelf) {\n          $.store.updateSelfComponents.push(this)\n          this.__$updateSelfPath_ = getPath(options.useSelf)\n        }\n      }\n\n    }\n\n    shouldComponentUpdate() {\n      if (currentComponent === this) return true\n      return !isSelf\n    }\n\n    componentWillUnmount() {\n      removeItem(this, $.store.components)\n      removeItem(this, $.store.updateSelfComponents)\n    }\n\n    render() {\n      return options.render.apply(this, arguments)\n    }\n  }\n}\n\nfunction removeItem(item, arr) {\n  for (let i = 0, len = arr.length; i < len; i++) {\n    if (arr[i] === item) {\n      arr.splice(i, 1)\n      break\n    }\n  }\n}\n\nfunction observe(store, storeName) {\n\n  store.components = []\n  store.updateSelfComponents = []\n  obaa(store.data, (prop, val, old, path) => {\n    const patch = {}\n\n    patch[fixPath(path + '-' + prop)] = true\n    store.components.forEach(component => {\n      const p = component.__$updatePath_\n      if (storeName) {\n        if (p && p[storeName] && needUpdate(patch, p[storeName])) {\n          update(component)\n\n          isSelf = false\n        }\n      } else if (p && needUpdate(patch, p)) {\n        update(component)\n        isSelf = false\n      }\n\n    })\n\n    store.updateSelfComponents.forEach(component => {\n      const sp = component.__$updateSelfPath_\n      if (storeName) {\n        if (sp && sp[storeName] && needUpdate(patch, sp[storeName])) {\n          update(component)\n          isSelf = true\n          currentComponent = component\n        }\n      } else if (sp && needUpdate(patch, sp)) {\n        update(component)\n        isSelf = true\n        currentComponent = component\n      }\n    })\n  })\n}\n\nfunction update(component){\n  component.setState({ __$id_: component.state.__$id_++ })\n}\n\n\nexport function render(renderer, app, renderTo, store) {\n  reset(store)\n  renderer(app, typeof renderTo === 'string' ? document.querySelector(renderTo) : renderTo)\n}\n\nexport function reset(s) {\n  if (s) {\n    $.store = s\n    if ($.store.data) {\n      isMultiStore = false\n      observe($.store)\n    } else {\n      isMultiStore = true\n      for (let key in $.store) {\n        if ($.store[key].data) {\n          observe($.store[key], key)\n        }\n      }\n    }\n  }\n}\n","import { $, render, reset } from './react'\n\nexport default { $, render, reset}\n\nexport { $, render, reset }\n\n"]}